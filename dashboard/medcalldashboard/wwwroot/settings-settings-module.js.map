{"version":3,"sources":["webpack:///./app/settings/city/city-detail/city-detail.component.html","webpack:///./app/settings/city/city-detail/city-detail.component.scss","webpack:///./app/settings/city/city-detail/city-detail.component.ts","webpack:///./app/settings/city/city-list/city-list.component.html","webpack:///./app/settings/city/city-list/city-list.component.scss","webpack:///./app/settings/city/city-list/city-list.component.ts","webpack:///./app/settings/country/country-detail/country-detail.component.html","webpack:///./app/settings/country/country-detail/country-detail.component.scss","webpack:///./app/settings/country/country-detail/country-detail.component.ts","webpack:///./app/settings/country/country-list/country-list.component.html","webpack:///./app/settings/country/country-list/country-list.component.scss","webpack:///./app/settings/country/country-list/country-list.component.ts","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.html","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.scss","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.ts","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.html","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.scss","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.ts","webpack:///./app/settings/settings-routing.module.ts","webpack:///./app/settings/settings.module.ts","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.html","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.scss","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.ts","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.html","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.scss","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"select\\\" class=\\\"col-sm-3 form-control-label\\\">Country</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <select id=\\\"select\\\" formControlName=\\\"countryId\\\">\\n                        <option *ngFor=\\\"let c of countryList\\\" [value]=\\\"c.id\\\">\\n                          {{ c.name }}\\n                        </option>\\n                      </select>\\n                  </div>\\n                </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                    <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                  </div>\\n              </div>\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<p>Form value: {{ itemForm.value | json }}</p>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { City, CityClient, Country, CountryClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-city-detail',\n  templateUrl: './city-detail.component.html',\n  styleUrls: ['./city-detail.component.scss']\n})\nexport class CityDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  countryList = new Array<Country>();\n\n  constructor(\n    private client: CityClient,\n    private countryClient: CountryClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n\n      this.countryClient.all(0, false).subscribe(\n        r => {\n          console.log(r);\n          this.countryList = r;\n        },\n        error => console.log(error),\n        () => console.log('get countries complete')\n      );\n\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  get country() { return this.itemForm.get('country'); }\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      countryId: '',\n      countryName: '',\n      // country: new FormControl(this.countryList[0]),\n      // country: '',\n      latitude: 0,\n      longitude: 0,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n    // this.itemForm.controls['country'].patchValue(this.itemForm.controls['countryId'].value, {onlySelf: true});\n  }\n\n  ngOnInit() {\n\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  selectCountry() {\n    alert('');\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/cities']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/cities']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/cities']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-content\\\">\\n          <ngx-datatable class=\\\"bootstrap\\\"\\n          [rows]=\\\"items.result\\\"\\n          [loadingIndicator]=\\\"loadingIndicator\\\"\\n          [headerHeight]=\\\"40\\\"\\n          [footerHeight]=\\\"40\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [externalPaging]=\\\"true\\\"\\n          [count]=\\\"count\\\"\\n          [offset]=\\\"items.pageIndex\\\"\\n          [limit]=\\\"items.pageSize\\\"\\n          (page)='loadPage($event)'>\\n            <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Country\\\" prop=\\\"countryName\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </button>\\n                    <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                        <i class=\\\"fa fa-pencil\\\"></i>\\n                    </button>\\n                </ng-template>\\n            </ngx-datatable-column>\\n        </ngx-datatable>\\n                    </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfCity, City, CityClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-city-list',\n  templateUrl: './city-list.component.html',\n  styleUrls: ['./city-list.component.scss']\n})\nexport class CityListComponent implements OnInit {\n\n  title = 'Cities';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfCity = new PagedResultOfCity();\n\n  constructor(private client: CityClient, private router: Router) { }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/cities/create']);\n  }\n\n  loadPage(para) {\n    // console.log(para.offset + ', ' + para.pageSize);\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"ibox-content\\\">\\n\\n            <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Code\\\" class=\\\"col-sm-3 form-control-label\\\">Code</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"code\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['code']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['code']) || itemForm.hasError('maxlength', ['code'])\\\">\\n                      Must be 3 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Code2\\\" class=\\\"col-sm-3 form-control-label\\\">Code 2</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"code2\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['code']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['code2']) || itemForm.hasError('maxlength', ['code2'])\\\">\\n                      Must be 2 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                      Numbers Only.\\n                    </span>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                    <div class=\\\"checkbox\\\">\\n                      <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <!-- buttons start -->\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n              </form>\\n        </div> <!-- ibox content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n  \\n  <p>Form value: {{ itemForm.value | json }}</p>\\n  \\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { Country, CountryClient } from '../../../core/data';\n\n\n\n@Component({\n  selector: 'app-country-detail',\n  templateUrl: './country-detail.component.html',\n  styleUrls: ['./country-detail.component.scss']\n})\nexport class CountryDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: CountryClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  get name() { return this.itemForm.get('name'); }\n  get nameArabic() { return this.itemForm.get('nameArabic'); }\n  get code() { return this.itemForm.get('code'); }\n  get code2() { return this.itemForm.get('code2'); }\n  get rank() { return this.itemForm.get('rank'); }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      code: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      code2: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/countries']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/countries']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/countries']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Code\\\" prop=\\\"code\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfCountry, Country, CountryClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-country-list',\n  templateUrl: './country-list.component.html',\n  styleUrls: ['./country-list.component.scss']\n})\nexport class CountryListComponent implements OnInit {\n\n  title = 'Countries';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfCountry = new PagedResultOfCountry();\n\n  constructor(private client: CountryClient, private router: Router) {}\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/countries/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <!-- buttons start -->\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<p>Form value: {{ itemForm.value | json }}</p>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { PriceRange, PricerangeClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-pricerange-detail',\n  templateUrl: './pricerange-detail.component.html',\n  styleUrls: ['./pricerange-detail.component.scss']\n})\nexport class PricerangeDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: PricerangeClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/priceranges']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/priceranges']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/priceranges']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfPriceRange, PriceRange,   PricerangeClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-pricerange-list',\n  templateUrl: './pricerange-list.component.html',\n  styleUrls: ['./pricerange-list.component.scss']\n})\nexport class PricerangeListComponent implements OnInit {\n\n  title = 'Price Ranges';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfPriceRange = new PagedResultOfPriceRange();\n\n  constructor(private client: PricerangeClient, private router: Router) { }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/priceranges/create']);\n  }\n\n  loadPage(para) {\n    // console.log(para.offset + ', ' + para.pageSize);\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport {BasicLayoutComponent} from '../components/common/layouts/basicLayout.component';\n\nimport { PricerangeListComponent } from './pricerange/pricerange-list/pricerange-list.component';\nimport { PricerangeDetailComponent } from './pricerange/pricerange-detail/pricerange-detail.component';\nimport { SpecialtyListComponent } from './specialty/specialty-list/specialty-list.component';\nimport { SpecialtyDetailComponent } from './specialty/specialty-detail/specialty-detail.component';\nimport { CountryListComponent } from './country/country-list/country-list.component';\nimport { CountryDetailComponent } from './country/country-detail/country-detail.component';\nimport { CityListComponent } from './city/city-list/city-list.component';\nimport { CityDetailComponent } from './city/city-detail/city-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'settings', component: BasicLayoutComponent, canActivate: [AuthorizationGuard],\n    children: [\n\n      { path: 'priceranges', component: PricerangeListComponent},\n      { path: 'priceranges/create', component: PricerangeDetailComponent },\n      { path: 'priceranges/edit/:id', component: PricerangeDetailComponent },\n\n      { path: 'specialties',\n        children: [\n          { path: ':flag', component: SpecialtyListComponent },\n          { path: ':flag/create', component: SpecialtyDetailComponent },\n          { path: ':flag/edit/:id', component: SpecialtyDetailComponent }\n        ]\n\n      },\n\n      { path: 'countries', component: CountryListComponent},\n      { path: 'countries/create', component: CountryDetailComponent },\n      { path: 'countries/edit/:id', component: CountryDetailComponent },\n\n      { path: 'cities', component: CityListComponent },\n      { path: 'cities/create', component: CityDetailComponent },\n      { path: 'cities/edit/:id', component: CityDetailComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CountryClient, CityClient, PricerangeClient, SpecialtyClient } from '../core/data';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { CountryListComponent } from './country/country-list/country-list.component';\nimport { CountryDetailComponent } from './country/country-detail/country-detail.component';\nimport { CityListComponent } from './city/city-list/city-list.component';\nimport { CityDetailComponent } from './city/city-detail/city-detail.component';\nimport { PricerangeListComponent } from './pricerange/pricerange-list/pricerange-list.component';\nimport { PricerangeDetailComponent } from './pricerange/pricerange-detail/pricerange-detail.component';\nimport { SpecialtyListComponent } from './specialty/specialty-list/specialty-list.component';\nimport { SpecialtyDetailComponent } from './specialty/specialty-detail/specialty-detail.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    CountryListComponent,\n    CountryDetailComponent,\n    CityListComponent,\n    CityDetailComponent,\n    PricerangeListComponent,\n    PricerangeDetailComponent,\n    SpecialtyListComponent,\n    SpecialtyDetailComponent\n  ],\n  providers: [CountryClient, CityClient, PricerangeClient, SpecialtyClient]\n})\nexport class SettingsModule { }\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <!-- buttons start -->\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<!--\\n<p>Form value: {{ itemForm.value | json }}</p>\\n-->\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { Specialty, SpecialtyClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-specialty-detail',\n  templateUrl: './specialty-detail.component.html',\n  styleUrls: ['./specialty-detail.component.scss']\n})\nexport class SpecialtyDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: SpecialtyClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      providerType: 0,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    } else {\n\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/specialties']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/specialties']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/specialties/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfSpecialty, Specialty, SpecialtyClient } from '../../../core/data';\nimport { PageService } from '../../../core/services';\n\n@Component({\n  selector: 'app-specialty-list',\n  templateUrl: './specialty-list.component.html',\n  styleUrls: ['./specialty-list.component.scss']\n})\nexport class SpecialtyListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'Specialties';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfSpecialty = new PagedResultOfSpecialty();\n\n  constructor(private client: SpecialtyClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForProvider(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/specialties/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n"],"sourceRoot":""}