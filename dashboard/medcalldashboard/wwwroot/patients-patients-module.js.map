{"version":3,"sources":["webpack:///./app/patients/patient-detail-address/patient-detail-address.component.html","webpack:///./app/patients/patient-detail-address/patient-detail-address.component.scss","webpack:///./app/patients/patient-detail-address/patient-detail-address.component.ts","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.html","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.scss","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.ts","webpack:///./app/patients/patient-detail/patient-detail.component.html","webpack:///./app/patients/patient-detail/patient-detail.component.scss","webpack:///./app/patients/patient-detail/patient-detail.component.ts","webpack:///./app/patients/patient-list/patient-list.component.html","webpack:///./app/patients/patient-list/patient-list.component.scss","webpack:///./app/patients/patient-list/patient-list.component.ts","webpack:///./app/patients/patients-routing.module.ts","webpack:///./app/patients/patients.module.ts"],"names":[],"mappings":"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","file":"patients-patients-module.js","sourcesContent":["module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n            <div class=\\\"tabs-container\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id]\\\">Basic</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id, 'address']\\\">Address</a>\\n                    </li>\\n                    <!--\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', 'edit', page.id, 'specialties']\\\">Specialties</a>\\n                    </li>\\n                    -->\\n                </ul>\\n            </div>\\n            <div class=\\\"ibox-content\\\">\\n                <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                  <!-- fields start -->\\n  \\n                  <div class=\\\"form-group row\\\">\\n                      <label for=\\\"select\\\" class=\\\"col-sm-3 form-control-label\\\">City</label>\\n                      <div class=\\\"col-sm-9\\\">\\n                        <select id=\\\"select\\\" formControlName=\\\"cityId\\\">\\n                            <option *ngFor=\\\"let c of cityList\\\" [value]=\\\"c.id\\\">\\n                              {{ c.name }}\\n                            </option>\\n                          </select>\\n                      </div>\\n                  </div>\\n  \\n                  <div class=\\\"form-group row\\\">\\n                    <label for=\\\"street\\\" class=\\\"col-sm-3 form-control-label\\\">Street</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                        <input id=\\\"street\\\" type=\\\"text\\\" formControlName=\\\"street\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['street']) && formDir.submitted\\\">\\n                          Required.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['street']) && formDir.submitted\\\">\\n                          Must be at least 3 characters long.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['street']) && formDir.submitted\\\">\\n                          Must be less than 512 characters long.\\n                        </span>\\n                      </div>\\n                  </div>\\n  \\n                  <div class=\\\"form-group row\\\">\\n                    <label for=\\\"postCode\\\" class=\\\"col-sm-3 form-control-label\\\">Building No</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                          <input id=\\\"postCode\\\" type=\\\"text\\\" formControlName=\\\"postCode\\\" class=\\\"form-control\\\">\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['postCode']) && formDir.submitted\\\">\\n                            Required.\\n                          </span>\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['postCode']) && formDir.submitted\\\">\\n                            Must be at least 3 characters long.\\n                          </span>\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['postCode']) && formDir.submitted\\\">\\n                            Must be less than 512 characters long.\\n                          </span>\\n                        </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group row\\\">\\n                      <label for=\\\"latitude\\\" class=\\\"col-sm-3 form-control-label\\\">Latitude</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                          <input id=\\\"latitude\\\" type=\\\"text\\\" formControlName=\\\"latitude\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['latitude']) && formDir.submitted\\\">\\n                              Required.\\n                            </span>\\n                        </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"longitude\\\" class=\\\"col-sm-3 form-control-label\\\">Longitude</label>\\n                          <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"longitude\\\" type=\\\"text\\\" formControlName=\\\"longitude\\\" class=\\\"form-control\\\">\\n                              <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['longitude']) && formDir.submitted\\\">\\n                                Required.\\n                              </span>\\n                          </div>\\n                    </div>\\n                  <!-- fields end -->\\n                  <!-- buttons start -->\\n                  <div class=\\\"form-group row\\\">\\n                    <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                      <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                      <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                  </div>\\n                  <!-- buttons end -->\\n                </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator, DecimalValidator } from '../../core/validators';\n\nimport { Patient, PatientClient, City, CityClient } from '../../core/data';\n\n@Component({\n  selector: 'app-patient-detail-address',\n  templateUrl: './patient-detail-address.component.html',\n  styleUrls: ['./patient-detail-address.component.scss']\n})\nexport class PatientDetailAddressComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  cityList = new Array<City>();\n\n  constructor(\n    private client: PatientClient,\n    private cityClient: CityClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n\n    this.cityClient.all(0, false).subscribe(\n      r => {\n        // console.log(r);\n        this.cityList = r;\n      },\n      error => console.log(error),\n      () => console.log('get cities complete')\n    );\n\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      cityId: '',\n      cityName: '',\n      cityNameArabic: '',\n      street: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(512)]],\n      postCode: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(16)]],\n      latitude: [0, [DecimalValidator]],\n      longitude: [0, [DecimalValidator]],\n      updatedAt: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.addressGet(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      console.log(this.itemForm.value);\n      this.client.addressPut(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['patients']);\n        });\n\n    } else {\n      this.client.addressPost(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['patients']);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['patients']);\n  }\n\n}\n","module.exports = \"<p>\\n  patient-detail-audit works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-detail-audit',\n  templateUrl: './patient-detail-audit.component.html',\n  styleUrls: ['./patient-detail-audit.component.scss']\n})\nexport class PatientDetailAuditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  \\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"tabs-container\\\">\\n            <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"active\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id]\\\">Basic</a>\\n                </li>\\n                <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id, 'address']\\\">Address</a>\\n                </li>\\n                <!--\\n                <li class=\\\"\\\">\\n                    <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', 'edit', page.id, 'specialties']\\\">Specialties</a>\\n                </li>\\n                -->\\n            </ul>\\n        </div>\\n        <div class=\\\"ibox-content\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n            <!-- fields start -->\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"givenName\\\" class=\\\"col-sm-3 form-control-label\\\">First Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"givenName\\\" type=\\\"text\\\" formControlName=\\\"givenName\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['givenName']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be less than 128 characters long.\\n                    </span>\\n                  </div>\\n              </div>\\n    \\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"familyName\\\" class=\\\"col-sm-3 form-control-label\\\">Family Name</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                      <input id=\\\"familyName\\\" type=\\\"text\\\" formControlName=\\\"familyName\\\" class=\\\"form-control\\\">\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['familyName']) && formDir.submitted\\\">\\n                        Required.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be at least 4 characters long.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be less than 128 characters long.\\n                      </span>\\n                    </div>\\n              </div>\\n    \\n              <!-- Gender -->\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Gender\\\" class=\\\"col-sm-3 form-control-label\\\">Gender</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-male\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"1\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Male</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-female\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"2\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Female</span>\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n              <!-- Marital Status\\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"MaritalStatus\\\" class=\\\"col-sm-3 form-control-label\\\">Marital Status</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                      <label class=\\\"custom-control custom-radio\\\">\\n                        <input id=\\\"maritalStatus-single\\\"\\n                             type=\\\"radio\\\"\\n                             class=\\\"custom-control-input\\\"\\n                             [value]=\\\"1\\\"\\n                             formControlName=\\\"maritalStatus\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span class=\\\"custom-control-description\\\">Single</span>\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                      <label class=\\\"custom-control custom-radio\\\">\\n                        <input id=\\\"maritalStatus-married\\\"\\n                             type=\\\"radio\\\"\\n                             class=\\\"custom-control-input\\\"\\n                             [value]=\\\"2\\\"\\n                             formControlName=\\\"maritalStatus\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span class=\\\"custom-control-description\\\">Married</span>\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-widowed\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"3\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Widowed</span>\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-divorcee\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"4\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Divorcee</span>\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-other\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"5\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Other</span>\\n                        </label>\\n                    </div>\\n                  </div>\\n                </div>\\n              -->\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <div class=\\\"checkbox\\\">\\n                  <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- fields end -->\\n            <!-- buttons start -->\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n              </div>\\n            </div>\\n            <!-- buttons end -->\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Patient, PatientClient } from '../../core/data';\n\n@Component({\n  selector: 'app-patient-detail',\n  templateUrl: './patient-detail.component.html',\n  styleUrls: ['./patient-detail.component.scss']\n})\nexport class PatientDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: PatientClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      userId: '',\n      birthDate: '',\n      isEnabled: true,\n      givenName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      familyName: ['', [Validators.required, Validators.maxLength(128)]],\n      gender: '',\n      maritalStatus: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['patients']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <!--\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        -->\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"ibox float-e-margins\\\">\\n                      <div class=\\\"ibox-content\\\">\\n          <ngx-datatable class=\\\"bootstrap\\\"\\n          [rows]=\\\"items.result\\\"\\n          [loadingIndicator]=\\\"loadingIndicator\\\"\\n          [headerHeight]=\\\"40\\\"\\n          [footerHeight]=\\\"40\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [externalPaging]=\\\"true\\\"\\n          [count]=\\\"count\\\"\\n          [offset]=\\\"items.pageIndex\\\"\\n          [limit]=\\\"items.pageSize\\\"\\n          (page)='loadPage($event)'>\\n            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Age\\\" prop=\\\"age\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Gender\\\" prop=\\\"gender\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | genderString}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            <!--\\n            <ngx-datatable-column name=\\\"Marital Status\\\" prop=\\\"maritalStatus\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | maritalStatusString}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            -->\\n            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <!--\\n                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </button>\\n                    -->\\n                    <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                        <i class=\\\"fa fa-pencil\\\"></i>\\n                    </button>\\n                </ng-template>\\n            </ngx-datatable-column>\\n        </ngx-datatable>\\n                      </div>\\n              </div>\\n        </div>\\n    </div>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfPatient, Patient, PatientClient } from '../../core/data';\nimport { PageService } from '../../core/services';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit {\n\n  title = 'Patient List';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfPatient = new PagedResultOfPatient();\n\n  constructor(private client: PatientClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['ptients/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BasicLayoutComponent } from '../components/common/layouts/basicLayout.component';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailComponent } from './patient-detail/patient-detail.component';\nimport { PatientDetailAddressComponent } from './patient-detail-address/patient-detail-address.component';\nimport { PatientDetailAuditComponent } from './patient-detail-audit/patient-detail-audit.component';\n\nconst routes: Routes = [\n  {\n    path: 'patients', component: BasicLayoutComponent, canLoad: [ AuthorizationGuard ],\n    children: [\n      { path: '', component: PatientListComponent },\n      { path: 'create', component: PatientDetailComponent },\n      { path: 'edit/:id', component: PatientDetailComponent },\n      { path: 'edit/:id/audit', component: PatientDetailAuditComponent },\n      { path: 'edit/:id/address', component: PatientDetailAddressComponent },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PatientsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { PatientClient } from '../core/data';\nimport { PageService } from '../core/services';\n\nimport { PatientsRoutingModule } from './patients-routing.module';\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailComponent } from './patient-detail/patient-detail.component';\nimport { PatientDetailAddressComponent } from './patient-detail-address/patient-detail-address.component';\nimport { PatientDetailAuditComponent } from './patient-detail-audit/patient-detail-audit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    CoreModule,\n    PatientsRoutingModule\n  ],\n  declarations: [PatientListComponent, PatientDetailComponent, PatientDetailAddressComponent, PatientDetailAuditComponent],\n  providers: [PatientClient, PageService]\n})\nexport class PatientsModule { }\n"],"sourceRoot":""}