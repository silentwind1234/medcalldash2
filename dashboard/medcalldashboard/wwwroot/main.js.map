{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.scss","webpack:///./app/app.component.ts","webpack:///./app/app.helpers.ts","webpack:///./app/app.module.ts","webpack:///./app/app.routes.ts","webpack:///./app/auth.Interceptor.ts","webpack:///./app/authorization.guard.ts","webpack:///./app/autologin/autologin.component.html","webpack:///./app/autologin/autologin.component.scss","webpack:///./app/autologin/autologin.component.ts","webpack:///./app/components/charts/peity.ts","webpack:///./app/components/charts/sparkline.ts","webpack:///./app/components/common/footer/footer.component.ts","webpack:///./app/components/common/footer/footer.template.html","webpack:///./app/components/common/layouts/basicLayout.component.ts","webpack:///./app/components/common/layouts/basicLayout.template.html","webpack:///./app/components/common/layouts/blankLayout.component.ts","webpack:///./app/components/common/layouts/blankLayout.template.html","webpack:///./app/components/common/layouts/layouts.module.ts","webpack:///./app/components/common/navigation/navigation.component.ts","webpack:///./app/components/common/navigation/navigation.template.html","webpack:///./app/components/common/topnavbar/topnavbar.component.ts","webpack:///./app/components/common/topnavbar/topnavbar.template.html","webpack:///./app/components/common/topnavbar/topnavigationnavbar.component.ts","webpack:///./app/components/common/topnavbar/topnavigationnavbar.template.html","webpack:///./app/config.service.ts","webpack:///./app/core/core.module.ts","webpack:///./app/core/data/configuration.service.ts","webpack:///./app/core/data/data-client.service.ts","webpack:///./app/core/data/index.ts","webpack:///./app/core/enums/gender.enum.ts","webpack:///./app/core/enums/index.ts","webpack:///./app/core/enums/marital-status.enum.ts","webpack:///./app/core/enums/payment-method.enum.ts","webpack:///./app/core/enums/provider-type.enum.ts","webpack:///./app/core/enums/request-status.enum.ts","webpack:///./app/core/enums/user-type.enum.ts","webpack:///./app/core/pipes/gender-string.pipe.ts","webpack:///./app/core/pipes/index.ts","webpack:///./app/core/pipes/marital-status-string.pipe.ts","webpack:///./app/core/pipes/payment-method-string.pipe.ts","webpack:///./app/core/pipes/provider-type-string.pipe.ts","webpack:///./app/core/pipes/request-status-string.pipe.ts","webpack:///./app/core/pipes/user-type-string.pipe.ts","webpack:///./app/core/services/activated-page.ts","webpack:///./app/core/services/index.ts","webpack:///./app/core/services/page-service.ts","webpack:///./app/core/validators/decimal-validator.ts","webpack:///./app/core/validators/index.ts","webpack:///./app/core/validators/ip-validator.ts","webpack:///./app/core/validators/number-validator.ts","webpack:///./app/forbidden/forbidden.component.html","webpack:///./app/forbidden/forbidden.component.scss","webpack:///./app/forbidden/forbidden.component.ts","webpack:///./app/patients/patient-detail-address/patient-detail-address.component.html","webpack:///./app/patients/patient-detail-address/patient-detail-address.component.scss","webpack:///./app/patients/patient-detail-address/patient-detail-address.component.ts","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.html","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.scss","webpack:///./app/patients/patient-detail-audit/patient-detail-audit.component.ts","webpack:///./app/patients/patient-detail/patient-detail.component.html","webpack:///./app/patients/patient-detail/patient-detail.component.scss","webpack:///./app/patients/patient-detail/patient-detail.component.ts","webpack:///./app/patients/patient-list/patient-list.component.html","webpack:///./app/patients/patient-list/patient-list.component.scss","webpack:///./app/patients/patient-list/patient-list.component.ts","webpack:///./app/patients/patients-routing.module.ts","webpack:///./app/patients/patients.module.ts","webpack:///./app/providers/provider-certificate-detail/provider-certificate-detail.component.html","webpack:///./app/providers/provider-certificate-detail/provider-certificate-detail.component.scss","webpack:///./app/providers/provider-certificate-detail/provider-certificate-detail.component.ts","webpack:///./app/providers/provider-certificate-list/provider-certificate-list.component.html","webpack:///./app/providers/provider-certificate-list/provider-certificate-list.component.scss","webpack:///./app/providers/provider-certificate-list/provider-certificate-list.component.ts","webpack:///./app/providers/provider-detail-address/provider-detail-address.component.html","webpack:///./app/providers/provider-detail-address/provider-detail-address.component.scss","webpack:///./app/providers/provider-detail-address/provider-detail-address.component.ts","webpack:///./app/providers/provider-detail-audit/provider-detail-audit.component.html","webpack:///./app/providers/provider-detail-audit/provider-detail-audit.component.scss","webpack:///./app/providers/provider-detail-audit/provider-detail-audit.component.ts","webpack:///./app/providers/provider-detail-basic/provider-detail-basic.component.html","webpack:///./app/providers/provider-detail-basic/provider-detail-basic.component.scss","webpack:///./app/providers/provider-detail-basic/provider-detail-basic.component.ts","webpack:///./app/providers/provider-detail/provider-detail.component.html","webpack:///./app/providers/provider-detail/provider-detail.component.scss","webpack:///./app/providers/provider-detail/provider-detail.component.ts","webpack:///./app/providers/provider-experience-detail/provider-experience-detail.component.html","webpack:///./app/providers/provider-experience-detail/provider-experience-detail.component.scss","webpack:///./app/providers/provider-experience-detail/provider-experience-detail.component.ts","webpack:///./app/providers/provider-experience-list/provider-experience-list.component.html","webpack:///./app/providers/provider-experience-list/provider-experience-list.component.scss","webpack:///./app/providers/provider-experience-list/provider-experience-list.component.ts","webpack:///./app/providers/provider-list/provider-list.component.html","webpack:///./app/providers/provider-list/provider-list.component.scss","webpack:///./app/providers/provider-list/provider-list.component.ts","webpack:///./app/providers/provider-specialty-detail/provider-specialty-detail.component.html","webpack:///./app/providers/provider-specialty-detail/provider-specialty-detail.component.scss","webpack:///./app/providers/provider-specialty-detail/provider-specialty-detail.component.ts","webpack:///./app/providers/provider-specialty-list/provider-specialty-list.component.html","webpack:///./app/providers/provider-specialty-list/provider-specialty-list.component.scss","webpack:///./app/providers/provider-specialty-list/provider-specialty-list.component.ts","webpack:///./app/providers/providers-routing.module.ts","webpack:///./app/providers/providers.module.ts","webpack:///./app/requests/request-detail/request-detail.component.html","webpack:///./app/requests/request-detail/request-detail.component.scss","webpack:///./app/requests/request-detail/request-detail.component.ts","webpack:///./app/requests/request-list/request-list.component.html","webpack:///./app/requests/request-list/request-list.component.scss","webpack:///./app/requests/request-list/request-list.component.ts","webpack:///./app/requests/requests-routing.module.ts","webpack:///./app/requests/requests.module.ts","webpack:///./app/settings/city/city-detail/city-detail.component.html","webpack:///./app/settings/city/city-detail/city-detail.component.scss","webpack:///./app/settings/city/city-detail/city-detail.component.ts","webpack:///./app/settings/city/city-list/city-list.component.html","webpack:///./app/settings/city/city-list/city-list.component.scss","webpack:///./app/settings/city/city-list/city-list.component.ts","webpack:///./app/settings/country/country-detail/country-detail.component.html","webpack:///./app/settings/country/country-detail/country-detail.component.scss","webpack:///./app/settings/country/country-detail/country-detail.component.ts","webpack:///./app/settings/country/country-list/country-list.component.html","webpack:///./app/settings/country/country-list/country-list.component.scss","webpack:///./app/settings/country/country-list/country-list.component.ts","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.html","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.scss","webpack:///./app/settings/pricerange/pricerange-detail/pricerange-detail.component.ts","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.html","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.scss","webpack:///./app/settings/pricerange/pricerange-list/pricerange-list.component.ts","webpack:///./app/settings/settings-routing.module.ts","webpack:///./app/settings/settings.module.ts","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.html","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.scss","webpack:///./app/settings/specialty/specialty-detail/specialty-detail.component.ts","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.html","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.scss","webpack:///./app/settings/specialty/specialty-list/specialty-list.component.ts","webpack:///./app/unauthorized/unauthorized.component.html","webpack:///./app/unauthorized/unauthorized.component.scss","webpack:///./app/unauthorized/unauthorized.component.ts","webpack:///./app/views/appviews/appviews.module.ts","webpack:///./app/views/appviews/login.component.ts","webpack:///./app/views/appviews/login.template.html","webpack:///./app/views/appviews/starter.template.html","webpack:///./app/views/appviews/starterview.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./patients/patients.module\": [\n\t\t\"./app/patients/patients.module.ts\",\n\t\t\"patients-patients-module~providers-providers-module~settings-settings-module\",\n\t\t\"common\",\n\t\t\"patients-patients-module\"\n\t],\n\t\"./providers/providers.module\": [\n\t\t\"./app/providers/providers.module.ts\",\n\t\t\"patients-patients-module~providers-providers-module~settings-settings-module\",\n\t\t\"common\",\n\t\t\"providers-providers-module\"\n\t],\n\t\"./settings/settings.module\": [\n\t\t\"./app/settings/settings.module.ts\",\n\t\t\"patients-patients-module~providers-providers-module~settings-settings-module\",\n\t\t\"common\",\n\t\t\"settings-settings-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<!-- Main view/routes wrapper-->\\n<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthorizationResult, OidcSecurityService } from 'angular-auth-oidc-client';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n  export class AppComponent implements OnInit, OnDestroy {\n\n  title = 'app';\n\n  constructor(public oidcSecurityService: OidcSecurityService,\n    private router: Router\n  ) {\n    if (this.oidcSecurityService.moduleSetup) {\n      this.onOidcModuleSetup();\n    } else {\n      this.oidcSecurityService.onModuleSetup.subscribe(() => {\n        this.onOidcModuleSetup();\n      });\n    }\n\n    this.oidcSecurityService.onAuthorizationResult.subscribe(\n      (authorizationResult: AuthorizationResult) => {\n        this.onAuthorizationResultComplete(authorizationResult);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy(): void {\n    this.oidcSecurityService.onModuleSetup.unsubscribe();\n  }\n\n  login() {\n    console.log('start login');\n    this.oidcSecurityService.authorize();\n  }\n\n  refreshSession() {\n    console.log('start refreshSession');\n    this.oidcSecurityService.authorize();\n  }\n\n  logout() {\n    console.log('start logoff');\n    this.oidcSecurityService.logoff();\n  }\n\n  private onOidcModuleSetup() {\n    if (window.location.hash) {\n      this.oidcSecurityService.authorizedCallback();\n    } else {\n      if ('/autologin' !== window.location.pathname) {\n        this.write('redirect', window.location.pathname);\n      }\n      console.log('AppComponent:onModuleSetup');\n    }\n  }\n\n  private onAuthorizationResultComplete(authorizationResult: AuthorizationResult) {\n    console.log('AppComponent:onAuthorizationResultComplete');\n    const path = this.read('redirect');\n    console.log('AppComponent:onAuthorizationResultComplete path=' + path);\n    if (authorizationResult === AuthorizationResult.authorized) {\n      this.router.navigate([path]);\n    } else {\n      this.router.navigate(['/unauthorized']);\n    }\n  }\n\n  private read(key: string): any {\n    const data = localStorage.getItem(key);\n    if (data != null) {\n      return JSON.parse(data);\n    }\n\n    return;\n  }\n\n  private write(key: string, value: any): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n","/*\n * Inspinia js helpers:\n *\n * correctHeight() - fix the height of main wrapper\n * detectBody() - detect windows size\n * smoothlyMenu() - add smooth fade in/out on navigation show/ide\n *\n */\n\ndeclare var jQuery: any;\n\nexport function correctHeight() {\n\n  const pageWrapper = jQuery('#page-wrapper');\n  const navbarHeight = jQuery('nav.navbar-default').height();\n  const wrapperHeight = pageWrapper.height();\n\n  if (navbarHeight > wrapperHeight) {\n    pageWrapper.css('min-height', navbarHeight + 'px');\n  }\n\n  if (navbarHeight <= wrapperHeight) {\n    if (navbarHeight < jQuery(window).height()) {\n      pageWrapper.css('min-height', jQuery(window).height() + 'px');\n    } else {\n      pageWrapper.css('min-height', navbarHeight + 'px');\n    }\n  }\n\n  if (jQuery('body').hasClass('fixed-nav')) {\n    if (navbarHeight > wrapperHeight) {\n      pageWrapper.css('min-height', navbarHeight + 'px');\n    } else {\n      pageWrapper.css('min-height', jQuery(window).height() - 60 + 'px');\n    }\n  }\n}\n\nexport function detectBody() {\n  if (jQuery(document).width() < 769) {\n    jQuery('body').addClass('body-small');\n  } else {\n    jQuery('body').removeClass('body-small');\n  }\n}\n\nexport function smoothlyMenu() {\n  if (!jQuery('body').hasClass('mini-navbar') || jQuery('body').hasClass('body-small')) {\n    // Hide menu in order to smoothly turn on when maximize menu\n    jQuery('#side-menu').hide();\n    // For smoothly turn on menu\n    setTimeout(\n      function () {\n        jQuery('#side-menu').fadeIn(400);\n      }, 200);\n  } else if (jQuery('body').hasClass('fixed-sidebar')) {\n    jQuery('#side-menu').hide();\n    setTimeout(\n      function () {\n        jQuery('#side-menu').fadeIn(400);\n      }, 100);\n  } else {\n    // Remove all inline style from jquery fadeIn function to reset menu state\n    jQuery('#side-menu').removeAttr('style');\n  }\n}\n","import { NgModule,  APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule} from '@angular/router';\nimport { LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport { APP_BASE_HREF } from '@angular/common';\nimport {\n  AuthModule,\n  OidcSecurityService,\n  OpenIDImplicitFlowConfiguration,\n  OidcConfigService,\n  AuthWellKnownEndpoints\n} from 'angular-auth-oidc-client';\nimport {ConfigService} from './config.service';\nimport { AuthInterceptor } from './auth.Interceptor';\nimport { AuthorizationGuard } from './authorization.guard';\nimport {ROUTES} from './app.routes';\nimport { AppComponent } from './app.component';\nimport {AppviewsModule} from './views/appviews/appviews.module';\nimport { environment } from '../environments/environment';\nimport { API_BASE_URL } from './core/data';\nimport { LayoutsModule } from './components/common/layouts/layouts.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { ProvidersModule } from './providers/providers.module';\nimport { PatientsModule } from './patients/patients.module';\nimport { RequestsModule } from './requests/requests.module';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { AutologinComponent } from './autologin/autologin.component';\nexport function loadConfig(oidcConfigService: OidcConfigService) {\n  console.log('APP_INITIALIZER STARTING');\n  return () => oidcConfigService.load_using_stsServer(environment.STS_BASE_URL);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UnauthorizedComponent,\n    ForbiddenComponent,\n    AutologinComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    AuthModule.forRoot(),\n    LayoutsModule,\n    AppviewsModule,\n    RouterModule.forRoot(ROUTES),\n    SettingsModule,\n    ProvidersModule,\n    PatientsModule,\n    RequestsModule\n  ],\n  providers: [\n    OidcConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadConfig,\n      deps: [OidcConfigService],\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    OidcSecurityService,\n    AuthorizationGuard,\n    { provide: APP_BASE_HREF, useValue: '/' },\n    { provide: API_BASE_URL, useValue: environment.API_BASE_URL }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    private oidcSecurityService: OidcSecurityService,\n    private configService: ConfigService,\n    private oidcConfigService: OidcConfigService) {\n    this.oidcConfigService.onConfigurationLoaded.subscribe(() => {\n      const openIDImplicitFlowConfiguration = new OpenIDImplicitFlowConfiguration();\n      openIDImplicitFlowConfiguration.stsServer = environment.STS_BASE_URL;\n      openIDImplicitFlowConfiguration.redirect_url = environment.APP_BASE_URL + '/starterview/';\n      openIDImplicitFlowConfiguration.client_id = 'angular-client';\n      openIDImplicitFlowConfiguration.response_type = 'id_token token';\n      openIDImplicitFlowConfiguration.scope = 'openid profile email medcall';\n      openIDImplicitFlowConfiguration.post_logout_redirect_uri = environment.APP_BASE_URL + '/Unauthorized/';\n      openIDImplicitFlowConfiguration.post_login_route = environment.APP_BASE_URL + '/starterview/';\n      openIDImplicitFlowConfiguration.forbidden_route = '/forbidden';\n      openIDImplicitFlowConfiguration.unauthorized_route = '/unauthorized';\n      openIDImplicitFlowConfiguration.auto_userinfo = true;\n      openIDImplicitFlowConfiguration.log_console_warning_active = true;\n      openIDImplicitFlowConfiguration.log_console_debug_active = !environment.production;\n      openIDImplicitFlowConfiguration.max_id_token_iat_offset_allowed_in_seconds = 60;\n      const authWellKnownEndpoints = new AuthWellKnownEndpoints();\n      authWellKnownEndpoints.setWellKnownEndpoints(this.oidcConfigService.wellKnownEndpoints);\n      this.oidcSecurityService.setupModule(openIDImplicitFlowConfiguration, authWellKnownEndpoints);\n    },\n    error => {\n      console.log('Auth Module: Error Occured in Auth Module Registration', error);\n    });\n    console.log('APP STARTING');\n  }\n}\n","import {Routes} from '@angular/router';\nimport {StarterViewComponent} from './views/appviews/starterview.component';\nimport {LoginComponent} from './views/appviews/login.component';\nimport {BlankLayoutComponent} from './components/common/layouts/blankLayout.component';\nimport {BasicLayoutComponent} from './components/common/layouts/basicLayout.component';\nimport { AuthorizationGuard } from './authorization.guard';\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\nimport { AutologinComponent } from './autologin/autologin.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\n\n\nexport const ROUTES: Routes = [\n  {path: '', redirectTo: 'starterview', pathMatch: 'full', canActivate: [AuthorizationGuard]},\n  {\n    path: 'dashboards', component: BasicLayoutComponent\n  },\n  {\n    path: '', component: BasicLayoutComponent, canActivate: [AuthorizationGuard],\n    children: [\n      {path: 'starterview', component: StarterViewComponent}\n    ]\n  },\n  { path: 'autologin', component: AutologinComponent },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'unauthorized', component: UnauthorizedComponent },\n  {\n    path: '', component: BlankLayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n    ]\n  },\n  {\n    path: 'providers', loadChildren: './providers/providers.module#ProvidersModule'\n  },\n  {\n    path: 'patients', loadChildren: './patients/patients.module#PatientsModule'\n  },\n\n  {\n    path: 'settings', loadChildren: './settings/settings.module#SettingsModule'\n  },\n\n  {path: '**',  redirectTo: 'starterview', canActivate: [AuthorizationGuard]}\n];\n","import { Component, Injectable,  Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n// import { HttpModule } from '@angular/http';\r\nimport { HttpHeaders, HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    private oidcSecurityService: OidcSecurityService;\r\n\r\n    constructor(private injector: Injector) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let requestToForward = req;\r\n\r\n        if (this.oidcSecurityService === undefined) {\r\n            this.oidcSecurityService = this.injector.get(OidcSecurityService);\r\n        }\r\n        if (this.oidcSecurityService !== undefined) {\r\n            const token = this.oidcSecurityService.getToken();\r\n            if (token !== '') {\r\n                const tokenValue = 'Bearer ' + token;\r\n                requestToForward = req.clone({ setHeaders: { 'Authorization': tokenValue } });\r\n            }\r\n        } else {\r\n            console.log('--- OidcSecurityService undefined: NO auth header!');\r\n        }\r\n        return next.handle(requestToForward);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\r\n\r\n@Injectable()\r\nexport class AuthorizationGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private oidcSecurityService: OidcSecurityService\r\n  ) { }\r\n\r\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n    console.log(route + '' + state);\r\n    console.log('AuthorizationGuard, canActivate');\r\n\r\n    return this.oidcSecurityService.getIsAuthorized().pipe(\r\n      map((isAuthorized: boolean) => {\r\n        console.log('AuthorizationGuard, canActivate isAuthorized: ' + isAuthorized);\r\n        \r\n        if (isAuthorized) {\r\n          return true;\r\n        }\r\n\r\n        if (!window.location.hash) {\r\n          console.log('AuthorizationGuard auto login');\r\n          this.router.navigate(['/autologin']);\r\n        }\r\n\r\n        // this.router.navigate(['/unauthorized']);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<p>\\n  login..\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\n\n@Component({\n  selector: 'app-autologin',\n  templateUrl: './autologin.component.html',\n  styleUrls: ['./autologin.component.scss']\n})\nexport class AutologinComponent implements OnInit, OnDestroy {\n\n  lang: any;\n\n  constructor(public oidcSecurityService: OidcSecurityService\n  ) {\n    this.oidcSecurityService.onModuleSetup.subscribe(() => { this.onModuleSetup(); });\n  }\n\n  ngOnInit() {\n    if (this.oidcSecurityService.moduleSetup) {\n      this.onModuleSetup();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.oidcSecurityService.onModuleSetup.unsubscribe();\n  }\n\n  private onModuleSetup() {\n    this.oidcSecurityService.authorize();\n  }\n}\n","import { OnInit, OnChanges, ElementRef, Input, NgModule, Directive } from '@angular/core';\n\n// Import Peity chart library\nimport 'peity';\n\ndeclare var jQuery: any;\n\n@Directive({\n  selector: 'span[peity]',\n  exportAs: 'peity-chart',\n\n})\nexport class PeityDirective implements OnChanges, OnInit {\n\n  // Properties\n  @Input() private  options:any;\n  @Input() private  type:any;\n\n  public chart:any;\n  private element:ElementRef;\n  private initFlag:boolean = false;\n\n  public constructor(element:ElementRef) {\n    this.element = element;\n  }\n\n  // Initialise\n  public ngOnInit():any {\n    this.initFlag = true;\n    if (this.options || this.type) {\n      this.build();\n    }\n  }\n\n  // Build\n  private build():any {\n\n    // Check if peity is available\n    if (typeof jQuery(this.element).peity === 'undefined') {\n      throw new Error('Configuration issue: Embedding peity lib is mandatory');\n    }\n\n    // Let's build chart\n    this.chart = jQuery(this.element.nativeElement).peity(this.type, this.options);\n  }\n\n  // Change\n  public ngOnChanges():void {\n    if (this.initFlag) {\n      this.build();\n    }\n  }\n\n}\n\n@NgModule({\n  declarations: [\n    PeityDirective\n  ],\n  exports: [\n    PeityDirective\n  ],\n  imports: []\n})\nexport class PeityModule {\n}\n","import { OnInit, OnChanges, ElementRef, Input,  NgModule, Directive } from '@angular/core';\n\n// Import Sparkline chart library\n// Sparkline library is included in angular-cli script section\n\ndeclare var jQuery: any;\n\n@Directive({\n  selector: 'span[sparkline]',\n  exportAs: 'sparkline-chart',\n\n})\nexport class SparklineDirective implements OnChanges, OnInit {\n\n  // Properties\n  @Input() private  options:any;\n  @Input() private  datasets:any;\n\n  public chart:any;\n  private element:ElementRef;\n  private initFlag:boolean = false;\n\n  public constructor(element:ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  // Initialise\n  public ngOnInit():any {\n    this.initFlag = true;\n    if (this.options || this.datasets) {\n      this.build();\n    }\n  }\n\n  // Build\n  private build():any {\n\n    // Check if sparkline is available\n    if (typeof jQuery(this.element).sparkline() === 'undefined') {\n      throw new Error('Configuration issue: Embedding sparkline lib is mandatory');\n    }\n\n    // Let's build chart\n    this.chart = jQuery(this.element).sparkline(this.datasets, this.options);\n  }\n\n  // Change\n  public ngOnChanges():void {\n    if (this.initFlag) {\n      this.build();\n    }\n  }\n\n}\n\n@NgModule({\n  declarations: [\n    SparklineDirective\n  ],\n  exports: [\n    SparklineDirective\n  ],\n  imports: []\n})\nexport class SparklineModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: 'footer.template.html'\n})\nexport class FooterComponent { }\n","module.exports = \"<div class=\\\"footer\\\">\\n  <div class=\\\"pull-right\\\">\\n    version: 1.0.0\\n  </div>\\n  <div>\\n    <strong>MedCall</strong> &copy; 2018\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { detectBody } from '../../../app.helpers';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-basic-layout',\n  templateUrl: 'basicLayout.template.html',\n  host: {\n    '(window:resize)': 'onResize()'\n  }\n})\nexport class BasicLayoutComponent {\n\n  public ngOnInit(): any {\n    detectBody();\n  }\n\n  public onResize() {\n    detectBody();\n  }\n\n}\n","module.exports = \"<!-- Wrapper-->\\n<div id=\\\"wrapper\\\">\\n\\n  <!-- Left navigation bar -->\\n  <app-navigation></app-navigation>\\n\\n  <!-- Main page wrapper -->\\n  <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n\\n    <!-- Top navigation -->\\n    <app-top-navbar></app-top-navbar>\\n\\n    <!-- Main view/routes wrapper-->\\n    <router-outlet></router-outlet>\\n\\n    <!-- Footer -->\\n    <app-footer></app-footer>\\n\\n  </div>\\n  <!-- End page wrapper-->\\n\\n</div>\\n<!-- End wrapper-->\\n\"","import { Component } from '@angular/core';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-blank-layout',\n  templateUrl: 'blankLayout.template.html'\n})\nexport class BlankLayoutComponent {\n\n  ngAfterViewInit() {\n    jQuery('body').addClass('gray-bg');\n  }\n\n  ngOnDestroy() {\n    jQuery('body').removeClass('gray-bg');\n  }\n}\n","module.exports = \"<!-- View/routes wrapper-->\\n<router-outlet></router-outlet>\\n\"","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {BsDropdownModule} from 'ngx-bootstrap';\n\nimport {BasicLayoutComponent} from './basicLayout.component';\nimport {BlankLayoutComponent} from './blankLayout.component';\n// import {TopNavigationLayoutComponent} from './topNavigationlayout.component';\n\nimport {NavigationComponent} from './../navigation/navigation.component';\nimport {FooterComponent} from './../footer/footer.component';\nimport {TopNavbarComponent} from './../topnavbar/topnavbar.component';\nimport {TopNavigationNavbarComponent} from './../topnavbar/topnavigationnavbar.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule,\n    BsDropdownModule.forRoot()\n  ],\n  declarations: [\n    FooterComponent,\n    BasicLayoutComponent,\n    BlankLayoutComponent,\n    NavigationComponent,\n    // TopNavigationLayoutComponent,\n    TopNavbarComponent,\n    TopNavigationNavbarComponent\n  ],\n  exports: [\n    FooterComponent,\n    BasicLayoutComponent,\n    BlankLayoutComponent,\n    NavigationComponent,\n    // TopNavigationLayoutComponent,\n    TopNavbarComponent,\n    TopNavigationNavbarComponent\n  ],\n})\n\nexport class LayoutsModule {}\n","import { Component, AfterViewInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport 'jquery-slimscroll';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: 'navigation.template.html'\n})\n\nexport class NavigationComponent implements AfterViewInit {\n\n  constructor(private router: Router) {}\n\n  ngAfterViewInit() {\n    jQuery('#side-menu').metisMenu();\n\n    if (jQuery('body').hasClass('fixed-sidebar')) {\n      jQuery('.sidebar-collapse').slimscroll({\n        height: '100%'\n      });\n    }\n  }\n\n  activeRoute(routename: string): boolean {\n    return this.router.url.indexOf(routename) > -1;\n  }\n\n\n}\n","module.exports = \"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\">\\n  <div class=\\\"sidebar-collapse\\\">\\n    <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\n      <li class=\\\"nav-header\\\">\\n        <div class=\\\"profile-element\\\">\\n          <span>\\n          <img alt=\\\"MedCall\\\" class=\\\"image m-l-md\\\" src=\\\"assets/images/logo.png\\\" style=\\\"max-width:70%;\\n          max-height:70%;\\\">\\n        </span>\\n        </div>\\n        <div class=\\\"logo-element\\\">\\n          MED\\n        </div>\\n      </li>\\n      \\n      <li [ngClass]=\\\"{active: activeRoute('starter')}\\\">\\n        <a [routerLink]=\\\"['/starterview']\\\"><i class=\\\"fa fa-th-large\\\"></i> <span class=\\\"nav-label\\\">Dashboard</span></a>\\n      </li>\\n      <li [ngClass]=\\\"{active: activeRoute('requests')}\\\">\\n          <a href=\\\"#\\\"><i class=\\\"fa fa-map-marker\\\"></i> <span class=\\\"nav-label\\\">Requests</span> <span class=\\\"fa arrow\\\"></span> </a>\\n          <ul class=\\\"nav nav-second-level collapse\\\" [ngClass]=\\\"{in: activeRoute('requests')}\\\">\\n            <li [ngClass]=\\\"{active: activeRoute('requests/1')}\\\"><a [routerLink]=\\\"['/requests/1']\\\">New</a></li>\\n            <li [ngClass]=\\\"{active: activeRoute('requests/2')}\\\"><a [routerLink]=\\\"['/requests/2']\\\">Approved</a></li>\\n            <li [ngClass]=\\\"{active: activeRoute('requests/3')}\\\"><a [routerLink]=\\\"['/requests/3']\\\">Assigned</a></li>\\n            <li [ngClass]=\\\"{active: activeRoute('requests/4')}\\\"><a [routerLink]=\\\"['/requests/4']\\\">Accepted</a></li>\\n            <!-- <li [ngClass]=\\\"{active: activeRoute('requests/5')}\\\"><a [routerLink]=\\\"['/requests/5']\\\">Canceled</a></li> -->\\n            <li [ngClass]=\\\"{active: activeRoute('requests/6')}\\\"><a [routerLink]=\\\"['/requests/6']\\\">Completed</a></li>\\n          </ul>\\n      </li>\\n      \\n      <li [ngClass]=\\\"{active: activeRoute('providers')}\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-user-md\\\"></i> <span class=\\\"nav-label\\\">Providers</span> <span class=\\\"fa arrow\\\"></span> </a>\\n        <ul class=\\\"nav nav-second-level collapse\\\" [ngClass]=\\\"{in: activeRoute('providers')}\\\">\\n          <li [ngClass]=\\\"{active: activeRoute('providers/1')}\\\"><a [routerLink]=\\\"['/providers/1']\\\">Doctors</a></li>\\n          <li [ngClass]=\\\"{active: activeRoute('providers/2')}\\\"><a [routerLink]=\\\"['/providers/2']\\\">Nurses</a></li>\\n          <li [ngClass]=\\\"{active: activeRoute('providers/3')}\\\"><a [routerLink]=\\\"['/providers/3']\\\">Laboratories</a></li>\\n          <li [ngClass]=\\\"{active: activeRoute('providers/4')}\\\"><a [routerLink]=\\\"['/providers/4']\\\">Radiographies</a></li>\\n        </ul>\\n      </li>\\n      <li [ngClass]=\\\"{active: activeRoute('patients')}\\\">\\n          <a [routerLink]=\\\"['/patients']\\\"><i class=\\\"fa fa-wheelchair\\\"></i> <span class=\\\"nav-label\\\">Patients</span></a>\\n        </li>\\n      <li [ngClass]=\\\"{active: activeRoute('settings')}\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-gear\\\"></i> <span class=\\\"nav-label\\\">Settings</span> <span class=\\\"fa arrow\\\"></span> </a>\\n        <ul class=\\\"nav nav-second-level collapse\\\" [ngClass]=\\\"{in: activeRoute('settings')}\\\">\\n\\n          <li [ngClass]=\\\"{active: activeRoute('specialties')}\\\">\\n              <a href=\\\"#\\\"><i class=\\\"fa fa-file-text-o\\\"></i> <span class=\\\"nav-label\\\">Specialties</span> <span class=\\\"fa arrow\\\"></span> </a>\\n              <ul class=\\\"nav nav-third-level collapse\\\" [ngClass]=\\\"{in: activeRoute('specialties')}\\\">\\n                <li [ngClass]=\\\"{active: activeRoute('specialties/1')}\\\"><a [routerLink]=\\\"['/settings/specialties/1']\\\">Doctors</a></li>\\n                <li [ngClass]=\\\"{active: activeRoute('specialties/2')}\\\"><a [routerLink]=\\\"['/settings/specialties/2']\\\">Nurses</a></li>\\n                <li [ngClass]=\\\"{active: activeRoute('specialties/3')}\\\"><a [routerLink]=\\\"['/settings/specialties/3']\\\">Laboratories</a></li>\\n                <li [ngClass]=\\\"{active: activeRoute('specialties/4')}\\\"><a [routerLink]=\\\"['/settings/specialties/4']\\\">Radiographies</a></li>\\n              </ul>\\n            </li>\\n          \\n          <li [ngClass]=\\\"{active: activeRoute('priceranges')}\\\"><a [routerLink]=\\\"['/settings/priceranges']\\\">Price Ranges</a></li>\\n          <li [ngClass]=\\\"{active: activeRoute('countries')}\\\"><a [routerLink]=\\\"['/settings/countries']\\\">Countries</a></li>\\n          <li [ngClass]=\\\"{active: activeRoute('cities')}\\\"><a [routerLink]=\\\"['/settings/cities']\\\">Cities</a></li>\\n        </ul>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\nimport { Subscription } from 'rxjs';\n\n\nimport {Router} from '@angular/router';\nimport { smoothlyMenu } from '../../../app.helpers';\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-top-navbar',\n  templateUrl: 'topnavbar.template.html'\n})\nexport class TopNavbarComponent implements OnInit, OnDestroy {\n\n  isCollapsed: Boolean = true;\n  isAuthorizedSubscription: Subscription;\n  isAuthorized: Boolean = false;\n\n  toggleNavigation(): void {\n    jQuery('body').toggleClass('mini-navbar');\n    smoothlyMenu();\n  }\n\n  login() {\n    console.log('-------------- login');\n    this.oidcSecurityService.authorize();\n  }\n\n  refreshSession() {\n    console.log('-------------- refresh');\n    this.oidcSecurityService.authorize();\n  }\n\n  logout() {\n    console.log('-------------- logout');\n    this.oidcSecurityService.logoff();\n  }\n\n  constructor( public oidcSecurityService: OidcSecurityService) {\n  }\n\n  ngOnInit() {\n    this.isAuthorizedSubscription = this.oidcSecurityService.getIsAuthorized().subscribe(\n      (isAuthorized: boolean) => {\n        this.isAuthorized = isAuthorized;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.oidcSecurityService.onModuleSetup.unsubscribe();\n  }\n\n}\n","module.exports = \"<div class=\\\"row border-bottom\\\">\\n  <nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"minimalize-styl-2 btn btn-primary \\\" (click)=\\\"toggleNavigation()\\\"><i class=\\\"fa fa-bars\\\"></i> </a>\\n      <!--\\n      <form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"#\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\">\\n        </div>\\n      </form>\\n      -->\\n    </div>\\n    <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n      <!--\\n      <li>\\n        <a href=\\\"#\\\">\\n          <i class=\\\"fa fa-sign-out\\\"></i> Log out\\n        </a>\\n      </li>\\n      -->\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" *ngIf=\\\"!isAuthorized\\\" (click)=\\\"login()\\\">Login</a></li>\\n\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" *ngIf=\\\"isAuthorized\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n      <!--\\n      <li [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!isAuthorized\\\" (click)=\\\"login()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>LOGIN</a>\\n      </li>\\n      <li [routerLinkActive]=\\\"['active']\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"isAuthorized\\\" (click)=\\\"logout()\\\"><span class='glyphicon glyphicon-log-out'></span>LOGOUT</a>\\n      </li>\\n      -->\\n      \\n    </ul>\\n\\n  </nav>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OidcSecurityService } from 'angular-auth-oidc-client';\nimport { Subscription } from 'rxjs';\n\n\nimport {Router} from '@angular/router';\nimport { smoothlyMenu } from '../../../app.helpers';\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-top-navigationnav-bar',\n  templateUrl: 'topnavigationnavbar.template.html'\n})\n\nexport class TopNavigationNavbarComponent implements OnInit, OnDestroy {\n\n  isCollapsed: Boolean = true;\n  isAuthorizedSubscription: Subscription;\n  isAuthorized: Boolean = false;\n\n  toggleNavigation(): void {\n    jQuery('body').toggleClass('mini-navbar');\n    smoothlyMenu();\n  }\n\n  login() {\n    console.log('-- login');\n    this.oidcSecurityService.authorize();\n  }\n\n  logout() {\n    console.log('-- logout');\n    this.oidcSecurityService.logoff();\n  }\n\n  constructor( public oidcSecurityService: OidcSecurityService) {\n\n    /*\n    if (this.oidcSecurityService.moduleSetup) {\n      this.doCallbackLogicIfRequired();\n    } else {\n      this.oidcSecurityService.onModuleSetup.subscribe(() => {\n        this.doCallbackLogicIfRequired();\n      });\n    }\n    */\n  }\n\n\n  ngOnInit(): void {\n    /*\n    this.isAuthorizedSubscription = this.oidcSecurityService.getIsAuthorized().subscribe(\n      (isAuthorized: boolean) => {\n        this.isAuthorized = isAuthorized;\n      });\n      */\n  }\n\n  private doCallbackLogicIfRequired() {\n    if (window.location.hash) {\n      this.oidcSecurityService.authorizedCallback();\n    }\n  }\n\n  ngOnDestroy(): void {\n    // this.oidcSecurityService.onModuleSetup.unsubscribe();\n  }\n\n}\n","module.exports = \"<div class=\\\"row border-bottom white-bg\\\">\\n  <nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button aria-controls=\\\"navbar\\\" aria-expanded=\\\"false\\\" data-target=\\\"#navbar\\\" data-toggle=\\\"collapse\\\" class=\\\"navbar-toggle collapsed\\\" type=\\\"button\\\">\\n        <i class=\\\"fa fa-reorder\\\"></i>\\n      </button>\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Inspinia</a>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\">\\n          <a aria-expanded=\\\"false\\\" role=\\\"button\\\" [routerLink]=\\\"['/layoutsview']\\\"> Back to main Layout page</a>\\n        </li>\\n        <li dropdown>\\n          <a aria-expanded=\\\"false\\\" role=\\\"button\\\"  dropdownToggle> Menu item <span class=\\\"caret\\\"></span></a>\\n          <ul role=\\\"menu\\\" *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n          </ul>\\n        </li>\\n        <li dropdown>\\n          <a aria-expanded=\\\"false\\\" role=\\\"button\\\" dropdownToggle> Menu item <span class=\\\"caret\\\"></span></a>\\n          <ul role=\\\"menu\\\" *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n          </ul>\\n        </li>\\n        <li dropdown>\\n          <a aria-expanded=\\\"false\\\" role=\\\"button\\\" dropdownToggle> Menu item <span class=\\\"caret\\\"></span></a>\\n          <ul role=\\\"menu\\\" *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n          </ul>\\n        </li>\\n        <li dropdown>\\n          <a aria-expanded=\\\"false\\\" role=\\\"button\\\" dropdownToggle> Menu item <span class=\\\"caret\\\"></span></a>\\n          <ul role=\\\"menu\\\" *dropdownMenu class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n            <li><a href=\\\"\\\">Menu item</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n        <li>\\n          <a href=\\\"login.html\\\">\\n            <i class=\\\"fa fa-sign-out\\\"></i> Log out\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\"","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { AuthModule, OidcSecurityService, OpenIDImplicitFlowConfiguration, AuthWellKnownEndpoints } from 'angular-auth-oidc-client';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onConfigurationLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  config: any;\n  wellKnownEndpoints: any;\n\n  constructor(\n\n  ) { }\n\n  async loadConfig(configUrl: string) {\n    try {\n      console.log('loadConfig from url: ' + configUrl);\n      const response = await fetch(configUrl);\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      this.config = await response.json();\n      await this.loadSSOConfig(this.config.SSOAddress);\n    } catch (err) {\n      console.error(`ConfigService 'loadConfig' threw an error on calling ${configUrl}`, err);\n      this.onConfigurationLoaded.emit(false);\n    }\n  }\n\n  async loadSSOConfig(stsServer: string) {\n    try {\n      console.log('loadSSOConfig');\n      const response = await fetch(`${stsServer}/.well-known/openid-configuration`);\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      this.wellKnownEndpoints = await response.json();\n      console.log(this.wellKnownEndpoints);\n      this.onConfigurationLoaded.emit(true);\n    } catch (err) {\n      console.error(`ConfigService 'loadSSOConfig' threw an error on calling ${stsServer}`, err);\n      this.onConfigurationLoaded.emit(false);\n    }\n  }\n\n\n  setupSSO(oidcSecurityService: OidcSecurityService) {\n    console.log('setupSSO');\n    const c = new OpenIDImplicitFlowConfiguration();\n    c.stsServer = this.config.SSOAddress;\n    c.redirect_url = window.location.origin;\n    c.client_id = this.config.SSOClientId;\n    c.response_type = 'id_token token';\n    c.scope = 'openid profile email ';\n    c.post_logout_redirect_uri = this.config.SSOAddress + '/Account/logout';\n    c.forbidden_route = '/forbidden';\n    c.unauthorized_route = '/unauthorized';\n    c.auto_userinfo = true;\n    c.log_console_warning_active = true;\n    c.log_console_debug_active = true;\n    c.max_id_token_iat_offset_allowed_in_seconds = 10;\n    c.start_checksession = false;\n    c.silent_renew = false;\n    // c.post_login_route = this.configService.clientConfiguration.startup_route;\n    const wn = new AuthWellKnownEndpoints();\n    wn.setWellKnownEndpoints(this.wellKnownEndpoints);\n    oidcSecurityService.setupModule(c, wn);\n  }\n\n\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/* ------------------ Enums -------*/\nimport {\n  Gender,\n  MaritalStatus,\n  UserType,\n  RequestStatus,\n  PaymentMethod,\n  ProviderType\n} from './enums';\n\nconst ENUMS = [\n  Gender,\n  MaritalStatus,\n  UserType,\n  RequestStatus,\n  PaymentMethod,\n  ProviderType\n];\n\n/* ------------------ Pipes -------*/\nimport {\n  GenderStringPipe,\n  MaritalStatusStringPipe,\n  UserTypeStringPipe,\n  RequestStatusStringPipe,\n  PaymentMethodStringPipe,\n  ProviderTypeStringPipe\n} from './pipes';\n\n\nconst PIPES = [\n  GenderStringPipe,\n  MaritalStatusStringPipe,\n  UserTypeStringPipe,\n  RequestStatusStringPipe,\n  PaymentMethodStringPipe,\n  ProviderTypeStringPipe\n];\n\nimport { PageService } from './services';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [...PIPES],\n  declarations: [...PIPES],\n  providers: [PageService]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n\r\n  private configuration: IServerConfiguration;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  loadConfig() {\r\n    return this.http.get<IServerConfiguration>('/api/v1/Configuration/ConfigurationData')\r\n      .toPromise()\r\n      .then(result => {\r\n        this.configuration = <IServerConfiguration>(result);\r\n      }, error => console.error(error));\r\n  }\r\n\r\n  get apiAddress() {\r\n    return this.configuration.ApiAddress;\r\n  }\r\n\r\n  get identityServerAddress() {\r\n    return this.configuration.IdentityServerAddress;\r\n  }\r\n\r\n}\r\n\r\nexport interface IServerConfiguration {\r\n  ApiAddress: string;\r\n  IdentityServerAddress: string;\r\n}\r\n","﻿import 'rxjs/add/observable/fromPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/catch';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse, HttpResponseBase, HttpErrorResponse } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\nexport interface IV1Client {\n    /**\n     * @return Success\n     */\n    config(): Observable<void>;\n}\n\n@Injectable()\nexport class V1Client implements IV1Client {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return Success\n     */\n    config(): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/config\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processConfig(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processConfig(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processConfig(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface ICertificateClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCertificate>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Certificate[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Certificate>;\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @all (optional) \n     * @return Success\n     */\n    provider(id: string, pageIndex: number | null | undefined, pageSize: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCertificate>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Certificate | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Certificate | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class CertificateClient implements ICertificateClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCertificate> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfCertificate>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfCertificate>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfCertificate> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfCertificate.fromJS(resultData200) : new PagedResultOfCertificate();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfCertificate>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Certificate[]> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Certificate[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Certificate[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Certificate[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Certificate.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Certificate[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Certificate> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Certificate>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Certificate>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Certificate> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Certificate.fromJS(resultData200) : new Certificate();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Certificate>(<any>null);\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @all (optional) \n     * @return Success\n     */\n    provider(id: string, pageIndex: number | null | undefined, pageSize: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCertificate> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/provider/{id}?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processProvider(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processProvider(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfCertificate>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfCertificate>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processProvider(response: HttpResponseBase): Observable<PagedResultOfCertificate> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfCertificate.fromJS(resultData200) : new PagedResultOfCertificate();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfCertificate>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Certificate | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Certificate | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/certificate/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface ICityClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCity>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<City[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<City>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: City | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: City | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class CityClient implements ICityClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCity> {\n        let url_ = this.baseUrl + \"/api/v1/city/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfCity>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfCity>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfCity> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfCity.fromJS(resultData200) : new PagedResultOfCity();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfCity>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<City[]> {\n        let url_ = this.baseUrl + \"/api/v1/city/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<City[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<City[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<City[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(City.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<City[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<City> {\n        let url_ = this.baseUrl + \"/api/v1/city/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<City>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<City>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<City> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? City.fromJS(resultData200) : new City();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<City>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: City | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/city/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: City | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/city/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/city/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IConfigurationClient {\n    /**\n     * @return Success\n     */\n    configurationdata(): Observable<void>;\n}\n\n@Injectable()\nexport class ConfigurationClient implements IConfigurationClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return Success\n     */\n    configurationdata(): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/configuration/configurationdata\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processConfigurationdata(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processConfigurationdata(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processConfigurationdata(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface ICountryClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCountry>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Country>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Country[]>;\n    /**\n     * @return Success\n     */\n    cities(id: string): Observable<City[]>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Country | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Country | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class CountryClient implements ICountryClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfCountry> {\n        let url_ = this.baseUrl + \"/api/v1/country/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfCountry>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfCountry>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfCountry> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfCountry.fromJS(resultData200) : new PagedResultOfCountry();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfCountry>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Country> {\n        let url_ = this.baseUrl + \"/api/v1/country/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Country>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Country>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Country> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Country.fromJS(resultData200) : new Country();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Country>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Country[]> {\n        let url_ = this.baseUrl + \"/api/v1/country/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Country[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Country[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Country[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Country.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Country[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    cities(id: string): Observable<City[]> {\n        let url_ = this.baseUrl + \"/api/v1/country/{id}/cities\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processCities(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCities(<any>response_);\n                } catch (e) {\n                    return <Observable<City[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<City[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCities(response: HttpResponseBase): Observable<City[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(City.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<City[]>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Country | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/country/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Country | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/country/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/country/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IExperienceClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfExperience>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Experience[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Experience>;\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @all (optional) \n     * @return Success\n     */\n    provider(id: string, pageIndex: number | null | undefined, pageSize: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfExperience>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Experience | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Experience | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class ExperienceClient implements IExperienceClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfExperience> {\n        let url_ = this.baseUrl + \"/api/v1/experience/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfExperience>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfExperience>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfExperience> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfExperience.fromJS(resultData200) : new PagedResultOfExperience();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfExperience>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Experience[]> {\n        let url_ = this.baseUrl + \"/api/v1/experience/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Experience[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Experience[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Experience[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Experience.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Experience[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Experience> {\n        let url_ = this.baseUrl + \"/api/v1/experience/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Experience>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Experience>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Experience> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Experience.fromJS(resultData200) : new Experience();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Experience>(<any>null);\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @all (optional) \n     * @return Success\n     */\n    provider(id: string, pageIndex: number | null | undefined, pageSize: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfExperience> {\n        let url_ = this.baseUrl + \"/api/v1/experience/provider/{id}?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processProvider(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processProvider(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfExperience>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfExperience>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processProvider(response: HttpResponseBase): Observable<PagedResultOfExperience> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfExperience.fromJS(resultData200) : new PagedResultOfExperience();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfExperience>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Experience | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/experience/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Experience | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/experience/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/experience/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IPatientClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfPatient>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Patient[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<PatientEdit>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: PatientEdit | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: PatientEdit | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPut(id: string, item: Audit | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPost(id: string, item: Audit | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    addressGet(id: string): Observable<Address>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPut(id: string, item: Address | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPost(id: string, item: Address | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    ccGet(id: string): Observable<CreditCard>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    ccPut(id: string, item: CreditCard | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    ccPost(id: string, item: CreditCard | null | undefined): Observable<void>;\n}\n\n@Injectable()\nexport class PatientClient implements IPatientClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfPatient> {\n        let url_ = this.baseUrl + \"/api/v1/patient/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfPatient>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfPatient>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfPatient> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfPatient.fromJS(resultData200) : new PagedResultOfPatient();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfPatient>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Patient[]> {\n        let url_ = this.baseUrl + \"/api/v1/patient/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Patient[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Patient[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Patient[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Patient.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Patient[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<PatientEdit> {\n        let url_ = this.baseUrl + \"/api/v1/patient/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<PatientEdit>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PatientEdit>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<PatientEdit> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PatientEdit.fromJS(resultData200) : new PatientEdit();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PatientEdit>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: PatientEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: PatientEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPut(id: string, item: Audit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/audit\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processAuditPut(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuditPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAuditPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPost(id: string, item: Audit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/audit\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processAuditPost(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuditPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAuditPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    addressGet(id: string): Observable<Address> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Address>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Address>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressGet(response: HttpResponseBase): Observable<Address> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Address.fromJS(resultData200) : new Address();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Address>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPut(id: string, item: Address | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressPut(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPost(id: string, item: Address | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressPost(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    ccGet(id: string): Observable<CreditCard> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/cc\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processCcGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCcGet(<any>response_);\n                } catch (e) {\n                    return <Observable<CreditCard>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<CreditCard>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCcGet(response: HttpResponseBase): Observable<CreditCard> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? CreditCard.fromJS(resultData200) : new CreditCard();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<CreditCard>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    ccPut(id: string, item: CreditCard | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/cc\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processCcPut(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCcPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCcPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    ccPost(id: string, item: CreditCard | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/patient/{id}/cc\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCcPost(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCcPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCcPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IPricerangeClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfPriceRange>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<PriceRange[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<PriceRange>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: PriceRange | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: PriceRange | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class PricerangeClient implements IPricerangeClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfPriceRange> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfPriceRange>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfPriceRange>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfPriceRange> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfPriceRange.fromJS(resultData200) : new PagedResultOfPriceRange();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfPriceRange>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<PriceRange[]> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<PriceRange[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PriceRange[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<PriceRange[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(PriceRange.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PriceRange[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<PriceRange> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<PriceRange>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PriceRange>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<PriceRange> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PriceRange.fromJS(resultData200) : new PriceRange();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PriceRange>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: PriceRange | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: PriceRange | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/pricerange/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IProviderClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfProvider>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Provider[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<ProviderEdit>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: ProviderEdit | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: ProviderEdit | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n    /**\n     * @return Success\n     */\n    auditGet(id: string): Observable<Audit>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPut(id: string, item: Audit | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPost(id: string, item: Audit | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    addressGet(id: string): Observable<Address>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPut(id: string, item: Address | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPost(id: string, item: Address | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    balance(id: string): Observable<Balance>;\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    certificates(id: string, all: boolean | null | undefined): Observable<Certificate[]>;\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    experiences(id: string, all: boolean | null | undefined): Observable<Experience[]>;\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    specialties(id: string, all: boolean | null | undefined): Observable<Specialty[]>;\n    /**\n     * @return Success\n     */\n    count(type: number): Observable<number>;\n}\n\n@Injectable()\nexport class ProviderClient implements IProviderClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfProvider> {\n        let url_ = this.baseUrl + \"/api/v1/provider/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfProvider>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfProvider>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfProvider> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfProvider.fromJS(resultData200) : new PagedResultOfProvider();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfProvider>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Provider[]> {\n        let url_ = this.baseUrl + \"/api/v1/provider/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Provider[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Provider[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Provider[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Provider.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Provider[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<ProviderEdit> {\n        let url_ = this.baseUrl + \"/api/v1/provider/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<ProviderEdit>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<ProviderEdit>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<ProviderEdit> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? ProviderEdit.fromJS(resultData200) : new ProviderEdit();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<ProviderEdit>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: ProviderEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: ProviderEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    auditGet(id: string): Observable<Audit> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/audit\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAuditGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuditGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Audit>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Audit>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAuditGet(response: HttpResponseBase): Observable<Audit> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Audit.fromJS(resultData200) : new Audit();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Audit>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPut(id: string, item: Audit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/audit\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processAuditPut(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuditPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAuditPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    auditPost(id: string, item: Audit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/audit\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processAuditPost(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuditPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAuditPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    addressGet(id: string): Observable<Address> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Address>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Address>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressGet(response: HttpResponseBase): Observable<Address> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Address.fromJS(resultData200) : new Address();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Address>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPut(id: string, item: Address | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressPut(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    addressPost(id: string, item: Address | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/address\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processAddressPost(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddressPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAddressPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    balance(id: string): Observable<Balance> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/balance\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processBalance(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processBalance(<any>response_);\n                } catch (e) {\n                    return <Observable<Balance>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Balance>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processBalance(response: HttpResponseBase): Observable<Balance> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Balance.fromJS(resultData200) : new Balance();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Balance>(<any>null);\n    }\n\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    certificates(id: string, all: boolean | null | undefined): Observable<Certificate[]> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/certificates?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processCertificates(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCertificates(<any>response_);\n                } catch (e) {\n                    return <Observable<Certificate[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Certificate[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCertificates(response: HttpResponseBase): Observable<Certificate[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Certificate.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Certificate[]>(<any>null);\n    }\n\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    experiences(id: string, all: boolean | null | undefined): Observable<Experience[]> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/experiences?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processExperiences(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processExperiences(<any>response_);\n                } catch (e) {\n                    return <Observable<Experience[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Experience[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processExperiences(response: HttpResponseBase): Observable<Experience[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Experience.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Experience[]>(<any>null);\n    }\n\n    /**\n     * @all (optional) \n     * @return Success\n     */\n    specialties(id: string, all: boolean | null | undefined): Observable<Specialty[]> {\n        let url_ = this.baseUrl + \"/api/v1/provider/{id}/specialties?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processSpecialties(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSpecialties(<any>response_);\n                } catch (e) {\n                    return <Observable<Specialty[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Specialty[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSpecialties(response: HttpResponseBase): Observable<Specialty[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Specialty.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Specialty[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    count(type: number): Observable<number> {\n        let url_ = this.baseUrl + \"/api/v1/request/provider/{type}/count\";\n        if (type === undefined || type === null)\n            throw new Error(\"The parameter 'type' must be defined.\");\n        url_ = url_.replace(\"{type}\", encodeURIComponent(\"\" + type)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processCount(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCount(<any>response_);\n                } catch (e) {\n                    return <Observable<number>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<number>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCount(response: HttpResponseBase): Observable<number> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<number>(<any>null);\n    }\n}\n\nexport interface IRequestClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfRequest>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<RequestEdit>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: RequestEdit | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: RequestEdit | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n    /**\n     * @return Success\n     */\n    approve(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class RequestClient implements IRequestClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfRequest> {\n        let url_ = this.baseUrl + \"/api/v1/request/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfRequest>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfRequest>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfRequest> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfRequest.fromJS(resultData200) : new PagedResultOfRequest();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfRequest>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<RequestEdit> {\n        let url_ = this.baseUrl + \"/api/v1/request/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<RequestEdit>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<RequestEdit>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<RequestEdit> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? RequestEdit.fromJS(resultData200) : new RequestEdit();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<RequestEdit>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: RequestEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/request/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: RequestEdit | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/request/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/request/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    approve(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/request/approve/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processApprove(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processApprove(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processApprove(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport interface IStatusClient {\n    /**\n     * @return Success\n     */\n    count(status: number): Observable<number>;\n}\n\n@Injectable()\nexport class StatusClient implements IStatusClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return Success\n     */\n    count(status: number): Observable<number> {\n        let url_ = this.baseUrl + \"/api/v1/request/status/{status}/count\";\n        if (status === undefined || status === null)\n            throw new Error(\"The parameter 'status' must be defined.\");\n        url_ = url_.replace(\"{status}\", encodeURIComponent(\"\" + status)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processCount(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCount(<any>response_);\n                } catch (e) {\n                    return <Observable<number>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<number>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCount(response: HttpResponseBase): Observable<number> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<number>(<any>null);\n    }\n}\n\nexport interface ISpecialtyClient {\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfSpecialty>;\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Specialty[]>;\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Specialty>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Specialty | null | undefined): Observable<void>;\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Specialty | null | undefined): Observable<void>;\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void>;\n}\n\n@Injectable()\nexport class SpecialtyClient implements ISpecialtyClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @pageIndex (optional) \n     * @pageSize (optional) \n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    page(pageIndex: number | null | undefined, pageSize: number | null | undefined, flag: number | null | undefined, all: boolean | null | undefined): Observable<PagedResultOfSpecialty> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/page?\";\n        if (pageIndex !== undefined)\n            url_ += \"pageIndex=\" + encodeURIComponent(\"\" + pageIndex) + \"&\"; \n        if (pageSize !== undefined)\n            url_ += \"pageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\"; \n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processPage(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPage(<any>response_);\n                } catch (e) {\n                    return <Observable<PagedResultOfSpecialty>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<PagedResultOfSpecialty>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processPage(response: HttpResponseBase): Observable<PagedResultOfSpecialty> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? PagedResultOfSpecialty.fromJS(resultData200) : new PagedResultOfSpecialty();\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<PagedResultOfSpecialty>(<any>null);\n    }\n\n    /**\n     * @flag (optional) \n     * @all (optional) \n     * @return Success\n     */\n    all(flag: number | null | undefined, all: boolean | null | undefined): Observable<Specialty[]> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/all?\";\n        if (flag !== undefined)\n            url_ += \"flag=\" + encodeURIComponent(\"\" + flag) + \"&\"; \n        if (all !== undefined)\n            url_ += \"all=\" + encodeURIComponent(\"\" + all) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processAll(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAll(<any>response_);\n                } catch (e) {\n                    return <Observable<Specialty[]>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Specialty[]>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processAll(response: HttpResponseBase): Observable<Specialty[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Specialty.fromJS(item));\n            }\n            return Observable.of(result200);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Specialty[]>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    get(id: string): Observable<Specialty> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/get/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).flatMap((response_ : any) => {\n            return this.processGet(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Specialty>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<Specialty>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Specialty> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Specialty.fromJS(resultData200) : new Specialty();\n            return Observable.of(result200);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<Specialty>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    create(item: Specialty | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).flatMap((response_ : any) => {\n            return this.processCreate(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @item (optional) \n     * @return Success\n     */\n    save(id: string, item: Specialty | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/save/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(item);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).flatMap((response_ : any) => {\n            return this.processSave(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSave(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processSave(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n\n    /**\n     * @return Success\n     */\n    delete(id: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/v1/specialty/delete/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).flatMap((response_ : any) => {\n            return this.processDelete(response_);\n        }).catch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>Observable.throw(e);\n                }\n            } else\n                return <Observable<void>><any>Observable.throw(response_);\n        });\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return Observable.of<void>(<any>null);\n            });\n        } else if (status === 404) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status === 400) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"A server error occurred.\", status, _responseText, _headers);\n            });\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).flatMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            });\n        }\n        return Observable.of<void>(<any>null);\n    }\n}\n\nexport class PagedResultOfCertificate implements IPagedResultOfCertificate {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Certificate[] | undefined;\n\n    constructor(data?: IPagedResultOfCertificate) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Certificate.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfCertificate {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfCertificate();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfCertificate {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Certificate[] | undefined;\n}\n\nexport class Certificate implements ICertificate {\n    providerId?: string | undefined;\n    notes?: string | undefined;\n    notesArabic?: string | undefined;\n    dateFrom?: Date | undefined;\n    dateTo?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: ICertificate) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.providerId = data[\"providerId\"];\n            this.notes = data[\"notes\"];\n            this.notesArabic = data[\"notesArabic\"];\n            this.dateFrom = data[\"dateFrom\"] ? new Date(data[\"dateFrom\"].toString()) : <any>undefined;\n            this.dateTo = data[\"dateTo\"] ? new Date(data[\"dateTo\"].toString()) : <any>undefined;\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Certificate {\n        data = typeof data === 'object' ? data : {};\n        let result = new Certificate();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"providerId\"] = this.providerId;\n        data[\"notes\"] = this.notes;\n        data[\"notesArabic\"] = this.notesArabic;\n        data[\"dateFrom\"] = this.dateFrom ? this.dateFrom.toISOString() : <any>undefined;\n        data[\"dateTo\"] = this.dateTo ? this.dateTo.toISOString() : <any>undefined;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ICertificate {\n    providerId?: string | undefined;\n    notes?: string | undefined;\n    notesArabic?: string | undefined;\n    dateFrom?: Date | undefined;\n    dateTo?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfCity implements IPagedResultOfCity {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: City[] | undefined;\n\n    constructor(data?: IPagedResultOfCity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(City.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfCity {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfCity();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfCity {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: City[] | undefined;\n}\n\nexport class City implements ICity {\n    countryId?: string | undefined;\n    countryName?: string | undefined;\n    latitude?: number | undefined;\n    longitude?: number | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: ICity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.countryId = data[\"countryId\"];\n            this.countryName = data[\"countryName\"];\n            this.latitude = data[\"latitude\"];\n            this.longitude = data[\"longitude\"];\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): City {\n        data = typeof data === 'object' ? data : {};\n        let result = new City();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"countryId\"] = this.countryId;\n        data[\"countryName\"] = this.countryName;\n        data[\"latitude\"] = this.latitude;\n        data[\"longitude\"] = this.longitude;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ICity {\n    countryId?: string | undefined;\n    countryName?: string | undefined;\n    latitude?: number | undefined;\n    longitude?: number | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfCountry implements IPagedResultOfCountry {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Country[] | undefined;\n\n    constructor(data?: IPagedResultOfCountry) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Country.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfCountry {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfCountry();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfCountry {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Country[] | undefined;\n}\n\nexport class Country implements ICountry {\n    code?: string | undefined;\n    code2?: string | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: ICountry) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.code = data[\"code\"];\n            this.code2 = data[\"code2\"];\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Country {\n        data = typeof data === 'object' ? data : {};\n        let result = new Country();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"code\"] = this.code;\n        data[\"code2\"] = this.code2;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ICountry {\n    code?: string | undefined;\n    code2?: string | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfExperience implements IPagedResultOfExperience {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Experience[] | undefined;\n\n    constructor(data?: IPagedResultOfExperience) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Experience.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfExperience {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfExperience();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfExperience {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Experience[] | undefined;\n}\n\nexport class Experience implements IExperience {\n    providerId?: string | undefined;\n    notes?: string | undefined;\n    notesArabic?: string | undefined;\n    dateFrom?: Date | undefined;\n    dateTo?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IExperience) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.providerId = data[\"providerId\"];\n            this.notes = data[\"notes\"];\n            this.notesArabic = data[\"notesArabic\"];\n            this.dateFrom = data[\"dateFrom\"] ? new Date(data[\"dateFrom\"].toString()) : <any>undefined;\n            this.dateTo = data[\"dateTo\"] ? new Date(data[\"dateTo\"].toString()) : <any>undefined;\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Experience {\n        data = typeof data === 'object' ? data : {};\n        let result = new Experience();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"providerId\"] = this.providerId;\n        data[\"notes\"] = this.notes;\n        data[\"notesArabic\"] = this.notesArabic;\n        data[\"dateFrom\"] = this.dateFrom ? this.dateFrom.toISOString() : <any>undefined;\n        data[\"dateTo\"] = this.dateTo ? this.dateTo.toISOString() : <any>undefined;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IExperience {\n    providerId?: string | undefined;\n    notes?: string | undefined;\n    notesArabic?: string | undefined;\n    dateFrom?: Date | undefined;\n    dateTo?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfPatient implements IPagedResultOfPatient {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Patient[] | undefined;\n\n    constructor(data?: IPagedResultOfPatient) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Patient.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfPatient {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfPatient();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfPatient {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Patient[] | undefined;\n}\n\nexport class Patient implements IPatient {\n    name?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    isEnabled?: boolean | undefined;\n    age?: number | undefined;\n    gender?: number | undefined;\n    maritalStatus?: number | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IPatient) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.name = data[\"name\"];\n            this.givenName = data[\"givenName\"];\n            this.familyName = data[\"familyName\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.age = data[\"age\"];\n            this.gender = data[\"gender\"];\n            this.maritalStatus = data[\"maritalStatus\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Patient {\n        data = typeof data === 'object' ? data : {};\n        let result = new Patient();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"givenName\"] = this.givenName;\n        data[\"familyName\"] = this.familyName;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"age\"] = this.age;\n        data[\"gender\"] = this.gender;\n        data[\"maritalStatus\"] = this.maritalStatus;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IPatient {\n    name?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    isEnabled?: boolean | undefined;\n    age?: number | undefined;\n    gender?: number | undefined;\n    maritalStatus?: number | undefined;\n    id?: string | undefined;\n}\n\nexport class PatientEdit implements IPatientEdit {\n    userId?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    isEnabled?: boolean | undefined;\n    birthDate?: Date | undefined;\n    gender?: number | undefined;\n    maritalStatus?: number | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IPatientEdit) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.userId = data[\"userId\"];\n            this.givenName = data[\"givenName\"];\n            this.familyName = data[\"familyName\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.birthDate = data[\"birthDate\"] ? new Date(data[\"birthDate\"].toString()) : <any>undefined;\n            this.gender = data[\"gender\"];\n            this.maritalStatus = data[\"maritalStatus\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): PatientEdit {\n        data = typeof data === 'object' ? data : {};\n        let result = new PatientEdit();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"userId\"] = this.userId;\n        data[\"givenName\"] = this.givenName;\n        data[\"familyName\"] = this.familyName;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"birthDate\"] = this.birthDate ? this.birthDate.toISOString() : <any>undefined;\n        data[\"gender\"] = this.gender;\n        data[\"maritalStatus\"] = this.maritalStatus;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IPatientEdit {\n    userId?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    isEnabled?: boolean | undefined;\n    birthDate?: Date | undefined;\n    gender?: number | undefined;\n    maritalStatus?: number | undefined;\n    id?: string | undefined;\n}\n\nexport class Audit implements IAudit {\n    ip?: string | undefined;\n    joinDate?: Date | undefined;\n    createdBy?: string | undefined;\n    editedBy?: string | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IAudit) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.ip = data[\"ip\"];\n            this.joinDate = data[\"joinDate\"] ? new Date(data[\"joinDate\"].toString()) : <any>undefined;\n            this.createdBy = data[\"createdBy\"];\n            this.editedBy = data[\"editedBy\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Audit {\n        data = typeof data === 'object' ? data : {};\n        let result = new Audit();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"ip\"] = this.ip;\n        data[\"joinDate\"] = this.joinDate ? this.joinDate.toISOString() : <any>undefined;\n        data[\"createdBy\"] = this.createdBy;\n        data[\"editedBy\"] = this.editedBy;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IAudit {\n    ip?: string | undefined;\n    joinDate?: Date | undefined;\n    createdBy?: string | undefined;\n    editedBy?: string | undefined;\n    id?: string | undefined;\n}\n\nexport class Address implements IAddress {\n    street?: string | undefined;\n    latitude?: number | undefined;\n    longitude?: number | undefined;\n    postCode?: string | undefined;\n    updatedAt?: Date | undefined;\n    cityId?: string | undefined;\n    cityName?: string | undefined;\n    cityNameArabic?: string | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IAddress) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.street = data[\"street\"];\n            this.latitude = data[\"latitude\"];\n            this.longitude = data[\"longitude\"];\n            this.postCode = data[\"postCode\"];\n            this.updatedAt = data[\"updatedAt\"] ? new Date(data[\"updatedAt\"].toString()) : <any>undefined;\n            this.cityId = data[\"cityId\"];\n            this.cityName = data[\"cityName\"];\n            this.cityNameArabic = data[\"cityNameArabic\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Address {\n        data = typeof data === 'object' ? data : {};\n        let result = new Address();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"street\"] = this.street;\n        data[\"latitude\"] = this.latitude;\n        data[\"longitude\"] = this.longitude;\n        data[\"postCode\"] = this.postCode;\n        data[\"updatedAt\"] = this.updatedAt ? this.updatedAt.toISOString() : <any>undefined;\n        data[\"cityId\"] = this.cityId;\n        data[\"cityName\"] = this.cityName;\n        data[\"cityNameArabic\"] = this.cityNameArabic;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IAddress {\n    street?: string | undefined;\n    latitude?: number | undefined;\n    longitude?: number | undefined;\n    postCode?: string | undefined;\n    updatedAt?: Date | undefined;\n    cityId?: string | undefined;\n    cityName?: string | undefined;\n    cityNameArabic?: string | undefined;\n    id?: string | undefined;\n}\n\nexport class CreditCard implements ICreditCard {\n    cardNumber?: string | undefined;\n    securityNumber?: string | undefined;\n    expiration?: string | undefined;\n    cardHolderName?: string | undefined;\n    cardType?: number | undefined;\n    street?: string | undefined;\n    city?: string | undefined;\n    country?: string | undefined;\n    zipCode?: string | undefined;\n    id?: string | undefined;\n\n    constructor(data?: ICreditCard) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.cardNumber = data[\"cardNumber\"];\n            this.securityNumber = data[\"securityNumber\"];\n            this.expiration = data[\"expiration\"];\n            this.cardHolderName = data[\"cardHolderName\"];\n            this.cardType = data[\"cardType\"];\n            this.street = data[\"street\"];\n            this.city = data[\"city\"];\n            this.country = data[\"country\"];\n            this.zipCode = data[\"zipCode\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): CreditCard {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreditCard();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"cardNumber\"] = this.cardNumber;\n        data[\"securityNumber\"] = this.securityNumber;\n        data[\"expiration\"] = this.expiration;\n        data[\"cardHolderName\"] = this.cardHolderName;\n        data[\"cardType\"] = this.cardType;\n        data[\"street\"] = this.street;\n        data[\"city\"] = this.city;\n        data[\"country\"] = this.country;\n        data[\"zipCode\"] = this.zipCode;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ICreditCard {\n    cardNumber?: string | undefined;\n    securityNumber?: string | undefined;\n    expiration?: string | undefined;\n    cardHolderName?: string | undefined;\n    cardType?: number | undefined;\n    street?: string | undefined;\n    city?: string | undefined;\n    country?: string | undefined;\n    zipCode?: string | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfPriceRange implements IPagedResultOfPriceRange {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: PriceRange[] | undefined;\n\n    constructor(data?: IPagedResultOfPriceRange) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(PriceRange.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfPriceRange {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfPriceRange();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfPriceRange {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: PriceRange[] | undefined;\n}\n\nexport class PriceRange implements IPriceRange {\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IPriceRange) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): PriceRange {\n        data = typeof data === 'object' ? data : {};\n        let result = new PriceRange();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IPriceRange {\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfProvider implements IPagedResultOfProvider {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Provider[] | undefined;\n\n    constructor(data?: IPagedResultOfProvider) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Provider.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfProvider {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfProvider();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfProvider {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Provider[] | undefined;\n}\n\nexport class Provider implements IProvider {\n    name?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    gender?: number | undefined;\n    providerType?: number | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IProvider) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.name = data[\"name\"];\n            this.givenName = data[\"givenName\"];\n            this.familyName = data[\"familyName\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.gender = data[\"gender\"];\n            this.providerType = data[\"providerType\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Provider {\n        data = typeof data === 'object' ? data : {};\n        let result = new Provider();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"givenName\"] = this.givenName;\n        data[\"familyName\"] = this.familyName;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"gender\"] = this.gender;\n        data[\"providerType\"] = this.providerType;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IProvider {\n    name?: string | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    gender?: number | undefined;\n    providerType?: number | undefined;\n    id?: string | undefined;\n}\n\nexport class ProviderEdit implements IProviderEdit {\n    userId?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    providerType?: number | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    gender?: number | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IProviderEdit) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.userId = data[\"userId\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.providerType = data[\"providerType\"];\n            this.givenName = data[\"givenName\"];\n            this.familyName = data[\"familyName\"];\n            this.gender = data[\"gender\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): ProviderEdit {\n        data = typeof data === 'object' ? data : {};\n        let result = new ProviderEdit();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"userId\"] = this.userId;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"providerType\"] = this.providerType;\n        data[\"givenName\"] = this.givenName;\n        data[\"familyName\"] = this.familyName;\n        data[\"gender\"] = this.gender;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IProviderEdit {\n    userId?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    providerType?: number | undefined;\n    givenName?: string | undefined;\n    familyName?: string | undefined;\n    gender?: number | undefined;\n    id?: string | undefined;\n}\n\nexport class Balance implements IBalance {\n    profileId?: string | undefined;\n    outstanding?: number | undefined;\n    total?: number | undefined;\n    updatedAt?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IBalance) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.profileId = data[\"profileId\"];\n            this.outstanding = data[\"outstanding\"];\n            this.total = data[\"total\"];\n            this.updatedAt = data[\"updatedAt\"] ? new Date(data[\"updatedAt\"].toString()) : <any>undefined;\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Balance {\n        data = typeof data === 'object' ? data : {};\n        let result = new Balance();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"profileId\"] = this.profileId;\n        data[\"outstanding\"] = this.outstanding;\n        data[\"total\"] = this.total;\n        data[\"updatedAt\"] = this.updatedAt ? this.updatedAt.toISOString() : <any>undefined;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IBalance {\n    profileId?: string | undefined;\n    outstanding?: number | undefined;\n    total?: number | undefined;\n    updatedAt?: Date | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class Specialty implements ISpecialty {\n    providerType?: number | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n\n    constructor(data?: ISpecialty) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.providerType = data[\"providerType\"];\n            this.name = data[\"name\"];\n            this.nameArabic = data[\"nameArabic\"];\n            this.rank = data[\"rank\"];\n            this.isEnabled = data[\"isEnabled\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Specialty {\n        data = typeof data === 'object' ? data : {};\n        let result = new Specialty();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"providerType\"] = this.providerType;\n        data[\"name\"] = this.name;\n        data[\"nameArabic\"] = this.nameArabic;\n        data[\"rank\"] = this.rank;\n        data[\"isEnabled\"] = this.isEnabled;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface ISpecialty {\n    providerType?: number | undefined;\n    name?: string | undefined;\n    nameArabic?: string | undefined;\n    rank?: number | undefined;\n    isEnabled?: boolean | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfRequest implements IPagedResultOfRequest {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Request[] | undefined;\n\n    constructor(data?: IPagedResultOfRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Request.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfRequest {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfRequest();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfRequest {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Request[] | undefined;\n}\n\nexport class Request implements IRequest {\n    patientName?: string | undefined;\n    providerName?: string | undefined;\n    specialty?: string | undefined;\n    priceRange?: string | undefined;\n    readonly dayKey?: string | undefined;\n    status?: number | undefined;\n    providerType?: number | undefined;\n    isClosed?: boolean | undefined;\n    requestDate?: Date | undefined;\n    visitDate?: Date | undefined;\n    closeDate?: Date | undefined;\n    cost?: number | undefined;\n    approvedBy?: string | undefined;\n    approvalDate?: Date | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IRequest) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.patientName = data[\"patientName\"];\n            this.providerName = data[\"providerName\"];\n            this.specialty = data[\"specialty\"];\n            this.priceRange = data[\"priceRange\"];\n            (<any>this).dayKey = data[\"dayKey\"];\n            this.status = data[\"status\"];\n            this.providerType = data[\"providerType\"];\n            this.isClosed = data[\"isClosed\"];\n            this.requestDate = data[\"requestDate\"] ? new Date(data[\"requestDate\"].toString()) : <any>undefined;\n            this.visitDate = data[\"visitDate\"] ? new Date(data[\"visitDate\"].toString()) : <any>undefined;\n            this.closeDate = data[\"closeDate\"] ? new Date(data[\"closeDate\"].toString()) : <any>undefined;\n            this.cost = data[\"cost\"];\n            this.approvedBy = data[\"approvedBy\"];\n            this.approvalDate = data[\"approvalDate\"] ? new Date(data[\"approvalDate\"].toString()) : <any>undefined;\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Request {\n        data = typeof data === 'object' ? data : {};\n        let result = new Request();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"patientName\"] = this.patientName;\n        data[\"providerName\"] = this.providerName;\n        data[\"specialty\"] = this.specialty;\n        data[\"priceRange\"] = this.priceRange;\n        data[\"dayKey\"] = this.dayKey;\n        data[\"status\"] = this.status;\n        data[\"providerType\"] = this.providerType;\n        data[\"isClosed\"] = this.isClosed;\n        data[\"requestDate\"] = this.requestDate ? this.requestDate.toISOString() : <any>undefined;\n        data[\"visitDate\"] = this.visitDate ? this.visitDate.toISOString() : <any>undefined;\n        data[\"closeDate\"] = this.closeDate ? this.closeDate.toISOString() : <any>undefined;\n        data[\"cost\"] = this.cost;\n        data[\"approvedBy\"] = this.approvedBy;\n        data[\"approvalDate\"] = this.approvalDate ? this.approvalDate.toISOString() : <any>undefined;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IRequest {\n    patientName?: string | undefined;\n    providerName?: string | undefined;\n    specialty?: string | undefined;\n    priceRange?: string | undefined;\n    dayKey?: string | undefined;\n    status?: number | undefined;\n    providerType?: number | undefined;\n    isClosed?: boolean | undefined;\n    requestDate?: Date | undefined;\n    visitDate?: Date | undefined;\n    closeDate?: Date | undefined;\n    cost?: number | undefined;\n    approvedBy?: string | undefined;\n    approvalDate?: Date | undefined;\n    id?: string | undefined;\n}\n\nexport class RequestEdit implements IRequestEdit {\n    patientName?: string | undefined;\n    providerName?: string | undefined;\n    specialty?: string | undefined;\n    priceRange?: string | undefined;\n    status?: number | undefined;\n    providerType?: number | undefined;\n    isClosed?: boolean | undefined;\n    requestDate?: Date | undefined;\n    visitDate?: Date | undefined;\n    closeDate?: Date | undefined;\n    cost?: number | undefined;\n    approvedBy?: string | undefined;\n    approvalDate?: Date | undefined;\n    notes?: string | undefined;\n    providerNotes?: string | undefined;\n    providerRating?: number | undefined;\n    patientRating?: number | undefined;\n    id?: string | undefined;\n\n    constructor(data?: IRequestEdit) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.patientName = data[\"patientName\"];\n            this.providerName = data[\"providerName\"];\n            this.specialty = data[\"specialty\"];\n            this.priceRange = data[\"priceRange\"];\n            this.status = data[\"status\"];\n            this.providerType = data[\"providerType\"];\n            this.isClosed = data[\"isClosed\"];\n            this.requestDate = data[\"requestDate\"] ? new Date(data[\"requestDate\"].toString()) : <any>undefined;\n            this.visitDate = data[\"visitDate\"] ? new Date(data[\"visitDate\"].toString()) : <any>undefined;\n            this.closeDate = data[\"closeDate\"] ? new Date(data[\"closeDate\"].toString()) : <any>undefined;\n            this.cost = data[\"cost\"];\n            this.approvedBy = data[\"approvedBy\"];\n            this.approvalDate = data[\"approvalDate\"] ? new Date(data[\"approvalDate\"].toString()) : <any>undefined;\n            this.notes = data[\"notes\"];\n            this.providerNotes = data[\"providerNotes\"];\n            this.providerRating = data[\"providerRating\"];\n            this.patientRating = data[\"patientRating\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): RequestEdit {\n        data = typeof data === 'object' ? data : {};\n        let result = new RequestEdit();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"patientName\"] = this.patientName;\n        data[\"providerName\"] = this.providerName;\n        data[\"specialty\"] = this.specialty;\n        data[\"priceRange\"] = this.priceRange;\n        data[\"status\"] = this.status;\n        data[\"providerType\"] = this.providerType;\n        data[\"isClosed\"] = this.isClosed;\n        data[\"requestDate\"] = this.requestDate ? this.requestDate.toISOString() : <any>undefined;\n        data[\"visitDate\"] = this.visitDate ? this.visitDate.toISOString() : <any>undefined;\n        data[\"closeDate\"] = this.closeDate ? this.closeDate.toISOString() : <any>undefined;\n        data[\"cost\"] = this.cost;\n        data[\"approvedBy\"] = this.approvedBy;\n        data[\"approvalDate\"] = this.approvalDate ? this.approvalDate.toISOString() : <any>undefined;\n        data[\"notes\"] = this.notes;\n        data[\"providerNotes\"] = this.providerNotes;\n        data[\"providerRating\"] = this.providerRating;\n        data[\"patientRating\"] = this.patientRating;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IRequestEdit {\n    patientName?: string | undefined;\n    providerName?: string | undefined;\n    specialty?: string | undefined;\n    priceRange?: string | undefined;\n    status?: number | undefined;\n    providerType?: number | undefined;\n    isClosed?: boolean | undefined;\n    requestDate?: Date | undefined;\n    visitDate?: Date | undefined;\n    closeDate?: Date | undefined;\n    cost?: number | undefined;\n    approvedBy?: string | undefined;\n    approvalDate?: Date | undefined;\n    notes?: string | undefined;\n    providerNotes?: string | undefined;\n    providerRating?: number | undefined;\n    patientRating?: number | undefined;\n    id?: string | undefined;\n}\n\nexport class PagedResultOfSpecialty implements IPagedResultOfSpecialty {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Specialty[] | undefined;\n\n    constructor(data?: IPagedResultOfSpecialty) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.pageIndex = data[\"pageIndex\"];\n            this.pageSize = data[\"pageSize\"];\n            this.count = data[\"count\"];\n            this.pageCount = data[\"pageCount\"];\n            if (data[\"result\"] && data[\"result\"].constructor === Array) {\n                this.result = [];\n                for (let item of data[\"result\"])\n                    this.result.push(Specialty.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PagedResultOfSpecialty {\n        data = typeof data === 'object' ? data : {};\n        let result = new PagedResultOfSpecialty();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"pageIndex\"] = this.pageIndex;\n        data[\"pageSize\"] = this.pageSize;\n        data[\"count\"] = this.count;\n        data[\"pageCount\"] = this.pageCount;\n        if (this.result && this.result.constructor === Array) {\n            data[\"result\"] = [];\n            for (let item of this.result)\n                data[\"result\"].push(item.toJSON());\n        }\n        return data; \n    }\n}\n\nexport interface IPagedResultOfSpecialty {\n    pageIndex?: number | undefined;\n    pageSize?: number | undefined;\n    count?: number | undefined;\n    pageCount?: number | undefined;\n    result?: Specialty[] | undefined;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if(result !== null && result !== undefined)\n        return Observable.throw(result);\n    else\n        return Observable.throw(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = function() { \n                observer.next(this.result);\n                observer.complete();\n            }\n            reader.readAsText(blob); \n        }\n    });\n}","export * from './data-client.service';\r\nexport * from './configuration.service';\r\n","export enum Gender {\n    Male = 1,\n    Female = 2,\n    All = 3\n}\n","export * from './gender.enum';\r\nexport * from './marital-status.enum';\r\nexport * from './user-type.enum';\r\nexport * from './request-status.enum';\r\nexport * from './payment-method.enum';\r\nexport * from './provider-type.enum';\r\n","export enum MaritalStatus {\n    Single = 1,\n    Married = 2,\n    Widowed = 3,\n    Divorcee = 4,\n    Other = 5\n}\n","export enum PaymentMethod {\n    Cach = 1,\n    CriedtCard = 2,\n    PayPal = 3\n}\n","export enum ProviderType {\n    Doctor = 1,\n    Nurse = 2,\n    Laboratory = 3,\n    Radiography = 4\n}\n","export enum RequestStatus {\n        New = 1,      // created from order, (no providerId yet)\n        Approved = 2, // approved by admin and broadcasted to doctors (no providerId yet)\n        Assigned = 3, // approved by admin and assigned to certain non-doctors providers (has providerId)\n        Accepted = 4, // accepted by a doctor (has providerId)\n        Canceled = 5,\n        Completed = 6\n    // Old values\n    // New = 1,\n    // Pending = 2,\n    // Approved = 3,\n    // Canceled = 4,\n    // Completed = 5\n}\n","export enum UserType {\n    SuperAdmin = 1,\n    Admin = 2,\n    Provider = 3,\n    Patient = 4\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Gender } from '../enums/gender.enum';\n\n@Pipe({\n  name: 'genderString'\n})\nexport class GenderStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return Gender[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","export * from './gender-string.pipe';\r\nexport * from './marital-status-string.pipe';\r\nexport * from './user-type-string.pipe';\r\nexport * from './request-status-string.pipe';\r\nexport * from './payment-method-string.pipe';\r\nexport * from './provider-type-string.pipe';\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaritalStatus } from '../enums/marital-status.enum';\n\n@Pipe({\n  name: 'maritalStatusString'\n})\nexport class MaritalStatusStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return MaritalStatus[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PaymentMethod } from '../enums/payment-method.enum';\n\n@Pipe({\n  name: 'paymentMethodString'\n})\nexport class PaymentMethodStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return PaymentMethod[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ProviderType } from '../enums/provider-type.enum';\n\n@Pipe({\n  name: 'providerTypeString'\n})\nexport class ProviderTypeStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return ProviderType[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RequestStatus } from '../enums/request-status.enum';\n\n@Pipe({\n  name: 'requestStatusString'\n})\nexport class RequestStatusStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return RequestStatus[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { UserType } from '../enums/user-type.enum';\n\n@Pipe({\n  name: 'userTypeString'\n})\nexport class UserTypeStringPipe implements PipeTransform {\n\n  transform(value: number): any {\n    return UserType[value].split(/(?=[A-Z])/).join().replace(',', ' ');\n  }\n\n}\n","// the current active page\r\nexport class ActivatedPage {\r\n    id: string | undefined;\r\n    typeFlag: number | undefined;\r\n    isEdit: boolean | undefined;\r\n    title: string | undefined;\r\n  }","export * from './page-service';\r\nexport * from './activated-page';\r\n","import { Injectable } from '@angular/core';\r\nimport { ProviderTypeStringPipe, RequestStatusStringPipe } from '../pipes';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ActivatedPage } from './activated-page';\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  get listRoute(): string {\r\n    return 'providers';\r\n  }\r\n\r\n  getListTitleForProvider(typeFlag: number, subTitle: string): string {\r\n    return new ProviderTypeStringPipe().transform(typeFlag) + ' ' + subTitle;\r\n  }\r\n\r\n  getListTitleForRequestStatus(typeFlag: number, subTitle: string): string {\r\n    return new RequestStatusStringPipe().transform(typeFlag) + ' ' + subTitle;\r\n  }\r\n\r\n\r\n\r\n  getActivatedPage(activatedRoute: ActivatedRoute): ActivatedPage {\r\n\r\n    console.log('|--> activatedRoute: ' + activatedRoute.snapshot);\r\n    const result = new ActivatedPage(); // = { };\r\n\r\n    if (activatedRoute.snapshot.params['id']) {\r\n      result.id = activatedRoute.snapshot.params['id']; // (+) converts string 'id' to a number\r\n      result.isEdit = true;\r\n      result.title = 'Edit';\r\n      console.log('|--> id: ' + result.id);\r\n    }\r\n    if (activatedRoute.snapshot.params['flag']) {\r\n      result.typeFlag = activatedRoute.snapshot.params['flag']; // (+) converts string 'id' to a number\r\n      console.log('|--> flag: ' + result.typeFlag);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getTabsForProvider(typeFlag: number, id: string): any[] {\r\n  return [\r\n    {\r\n      title: 'Basic',\r\n      route: '/pages/providers/' + typeFlag + '/edit/' + id,\r\n    },\r\n    {\r\n      title: 'Specialties',\r\n      route: '/pages/providers/' + typeFlag + '/edit/specialties/' + id,\r\n    },\r\n    {\r\n      title: 'Certificates',\r\n      route: '/pages/providers/' + typeFlag + '/edit/certificates/' + id,\r\n    },\r\n    {\r\n      title: 'Experience',\r\n      route: '/pages/providers/' + typeFlag + '/edit/experiences/' + id,\r\n    },\r\n    {\r\n      title: 'Address',\r\n      route: '/pages/providers/' + typeFlag + '/edit/address/' + id,\r\n    },\r\n    {\r\n      title: 'Location',\r\n      route: '/pages/providers/' + typeFlag + '/edit/location/' + id,\r\n    },\r\n    {\r\n      title: 'Audit',\r\n      route: '/pages/providers/' + typeFlag + '/edit/audit/' + id,\r\n    }\r\n  ];\r\n}\r\n\r\n}\r\n","import { Validators, FormControl } from '@angular/forms';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport function DecimalValidator(control: FormControl): { [key: string]: any } {\r\n  const value: string = control.value || '';\r\n  if (value) {\r\n    if (typeof value === 'number') { return null; }\r\n    const valid = value.match(/^[+]?\\d+(\\.\\d+)?$/);\r\n    return valid ? null : { onlydecimal: true };\r\n  }\r\n  return null;\r\n}\r\n","export * from './number-validator';\r\nexport * from './decimal-validator';\r\nexport * from './ip-validator';\r\n","import { Validators, FormControl } from '@angular/forms';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport function IpValidator(control: FormControl): { [key: string]: any } {\r\n  const value: string = control.value || '';\r\n  if (value) {\r\n    // if (typeof value === 'number') {return null;};\r\n    const valid = value.match(/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/);\r\n    return valid ? null : { onlyip: true };\r\n  }\r\n  return null;\r\n}\r\n","import { Validators, FormControl } from '@angular/forms';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport function NumberValidator(control: FormControl): { [key: string]: any } {\r\n  const value: string = control.value || '';\r\n  if (value) {\r\n    if (typeof value === 'number') { return null; }\r\n    const valid = value.match(/^\\d+$/);\r\n    return valid ? null : { onlynumber: true };\r\n  }\r\n  return null;\r\n}\r\n","module.exports = \"<p>\\n  forbidden works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.scss']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n            <div class=\\\"tabs-container\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id]\\\">Basic</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id, 'address']\\\">Address</a>\\n                    </li>\\n                    <!--\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', 'edit', page.id, 'specialties']\\\">Specialties</a>\\n                    </li>\\n                    -->\\n                </ul>\\n            </div>\\n            <div class=\\\"ibox-content\\\">\\n                <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                  <!-- fields start -->\\n  \\n                  <div class=\\\"form-group row\\\">\\n                      <label for=\\\"select\\\" class=\\\"col-sm-3 form-control-label\\\">City</label>\\n                      <div class=\\\"col-sm-9\\\">\\n                        <select id=\\\"select\\\" formControlName=\\\"cityId\\\">\\n                            <option *ngFor=\\\"let c of cityList\\\" [value]=\\\"c.id\\\">\\n                              {{ c.name }}\\n                            </option>\\n                          </select>\\n                      </div>\\n                  </div>\\n  \\n                  <div class=\\\"form-group row\\\">\\n                    <label for=\\\"street\\\" class=\\\"col-sm-3 form-control-label\\\">Street</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                        <input id=\\\"street\\\" type=\\\"text\\\" formControlName=\\\"street\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['street']) && formDir.submitted\\\">\\n                          Required.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['street']) && formDir.submitted\\\">\\n                          Must be at least 3 characters long.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['street']) && formDir.submitted\\\">\\n                          Must be less than 512 characters long.\\n                        </span>\\n                      </div>\\n                  </div>\\n  \\n                  <div class=\\\"form-group row\\\">\\n                    <label for=\\\"postCode\\\" class=\\\"col-sm-3 form-control-label\\\">Building No</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                          <input id=\\\"postCode\\\" type=\\\"text\\\" formControlName=\\\"postCode\\\" class=\\\"form-control\\\">\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['postCode']) && formDir.submitted\\\">\\n                            Required.\\n                          </span>\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['postCode']) && formDir.submitted\\\">\\n                            Must be at least 3 characters long.\\n                          </span>\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['postCode']) && formDir.submitted\\\">\\n                            Must be less than 512 characters long.\\n                          </span>\\n                        </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group row\\\">\\n                      <label for=\\\"latitude\\\" class=\\\"col-sm-3 form-control-label\\\">Latitude</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                          <input id=\\\"latitude\\\" type=\\\"text\\\" formControlName=\\\"latitude\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['latitude']) && formDir.submitted\\\">\\n                              Required.\\n                            </span>\\n                        </div>\\n                    </div>\\n  \\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"longitude\\\" class=\\\"col-sm-3 form-control-label\\\">Longitude</label>\\n                          <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"longitude\\\" type=\\\"text\\\" formControlName=\\\"longitude\\\" class=\\\"form-control\\\">\\n                              <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['longitude']) && formDir.submitted\\\">\\n                                Required.\\n                              </span>\\n                          </div>\\n                    </div>\\n                  <!-- fields end -->\\n                  <!-- buttons start -->\\n                  <div class=\\\"form-group row\\\">\\n                    <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                      <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                      <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                  </div>\\n                  <!-- buttons end -->\\n                </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator, DecimalValidator } from '../../core/validators';\n\nimport { Patient, PatientClient, City, CityClient } from '../../core/data';\n\n@Component({\n  selector: 'app-patient-detail-address',\n  templateUrl: './patient-detail-address.component.html',\n  styleUrls: ['./patient-detail-address.component.scss']\n})\nexport class PatientDetailAddressComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  cityList = new Array<City>();\n\n  constructor(\n    private client: PatientClient,\n    private cityClient: CityClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n\n    this.cityClient.all(0, false).subscribe(\n      r => {\n        // console.log(r);\n        this.cityList = r;\n      },\n      error => console.log(error),\n      () => console.log('get cities complete')\n    );\n\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      cityId: '',\n      cityName: '',\n      cityNameArabic: '',\n      street: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(512)]],\n      postCode: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(16)]],\n      latitude: [0, [DecimalValidator]],\n      longitude: [0, [DecimalValidator]],\n      updatedAt: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.addressGet(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      console.log(this.itemForm.value);\n      this.client.addressPut(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['patients']);\n        });\n\n    } else {\n      this.client.addressPost(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['patients']);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['patients']);\n  }\n\n}\n","module.exports = \"<p>\\n  patient-detail-audit works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-detail-audit',\n  templateUrl: './patient-detail-audit.component.html',\n  styleUrls: ['./patient-detail-audit.component.scss']\n})\nexport class PatientDetailAuditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  \\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"tabs-container\\\">\\n            <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"active\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id]\\\">Basic</a>\\n                </li>\\n                <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/patients', 'edit', page.id, 'address']\\\">Address</a>\\n                </li>\\n                <!--\\n                <li class=\\\"\\\">\\n                    <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', 'edit', page.id, 'specialties']\\\">Specialties</a>\\n                </li>\\n                -->\\n            </ul>\\n        </div>\\n        <div class=\\\"ibox-content\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n            <!-- fields start -->\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"givenName\\\" class=\\\"col-sm-3 form-control-label\\\">First Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"givenName\\\" type=\\\"text\\\" formControlName=\\\"givenName\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['givenName']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be less than 128 characters long.\\n                    </span>\\n                  </div>\\n              </div>\\n    \\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"familyName\\\" class=\\\"col-sm-3 form-control-label\\\">Family Name</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                      <input id=\\\"familyName\\\" type=\\\"text\\\" formControlName=\\\"familyName\\\" class=\\\"form-control\\\">\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['familyName']) && formDir.submitted\\\">\\n                        Required.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be at least 4 characters long.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be less than 128 characters long.\\n                      </span>\\n                    </div>\\n              </div>\\n    \\n              <!-- Gender -->\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Gender\\\" class=\\\"col-sm-3 form-control-label\\\">Gender</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-male\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"1\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Male</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-female\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"2\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Female</span>\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n              <!-- Marital Status\\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"MaritalStatus\\\" class=\\\"col-sm-3 form-control-label\\\">Marital Status</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                      <label class=\\\"custom-control custom-radio\\\">\\n                        <input id=\\\"maritalStatus-single\\\"\\n                             type=\\\"radio\\\"\\n                             class=\\\"custom-control-input\\\"\\n                             [value]=\\\"1\\\"\\n                             formControlName=\\\"maritalStatus\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span class=\\\"custom-control-description\\\">Single</span>\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                      <label class=\\\"custom-control custom-radio\\\">\\n                        <input id=\\\"maritalStatus-married\\\"\\n                             type=\\\"radio\\\"\\n                             class=\\\"custom-control-input\\\"\\n                             [value]=\\\"2\\\"\\n                             formControlName=\\\"maritalStatus\\\">\\n                        <span class=\\\"custom-control-indicator\\\"></span>\\n                        <span class=\\\"custom-control-description\\\">Married</span>\\n                      </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-widowed\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"3\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Widowed</span>\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-divorcee\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"4\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Divorcee</span>\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <label class=\\\"custom-control custom-radio\\\">\\n                          <input id=\\\"maritalStatus-other\\\"\\n                               type=\\\"radio\\\"\\n                               class=\\\"custom-control-input\\\"\\n                               [value]=\\\"5\\\"\\n                               formControlName=\\\"maritalStatus\\\">\\n                          <span class=\\\"custom-control-indicator\\\"></span>\\n                          <span class=\\\"custom-control-description\\\">Other</span>\\n                        </label>\\n                    </div>\\n                  </div>\\n                </div>\\n              -->\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <div class=\\\"checkbox\\\">\\n                  <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- fields end -->\\n            <!-- buttons start -->\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n              </div>\\n            </div>\\n            <!-- buttons end -->\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Patient, PatientClient } from '../../core/data';\n\n@Component({\n  selector: 'app-patient-detail',\n  templateUrl: './patient-detail.component.html',\n  styleUrls: ['./patient-detail.component.scss']\n})\nexport class PatientDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: PatientClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      userId: '',\n      birthDate: '',\n      isEnabled: true,\n      givenName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      familyName: ['', [Validators.required, Validators.maxLength(128)]],\n      gender: '',\n      maritalStatus: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['patients']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['patients']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <!--\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        -->\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"ibox float-e-margins\\\">\\n                      <div class=\\\"ibox-content\\\">\\n          <ngx-datatable class=\\\"bootstrap\\\"\\n          [rows]=\\\"items.result\\\"\\n          [loadingIndicator]=\\\"loadingIndicator\\\"\\n          [headerHeight]=\\\"40\\\"\\n          [footerHeight]=\\\"40\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [externalPaging]=\\\"true\\\"\\n          [count]=\\\"count\\\"\\n          [offset]=\\\"items.pageIndex\\\"\\n          [limit]=\\\"items.pageSize\\\"\\n          (page)='loadPage($event)'>\\n            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Age\\\" prop=\\\"age\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Gender\\\" prop=\\\"gender\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | genderString}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            <!--\\n            <ngx-datatable-column name=\\\"Marital Status\\\" prop=\\\"maritalStatus\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | maritalStatusString}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            -->\\n            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <!--\\n                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </button>\\n                    -->\\n                    <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                        <i class=\\\"fa fa-pencil\\\"></i>\\n                    </button>\\n                </ng-template>\\n            </ngx-datatable-column>\\n        </ngx-datatable>\\n                      </div>\\n              </div>\\n        </div>\\n    </div>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfPatient, Patient, PatientClient } from '../../core/data';\nimport { PageService } from '../../core/services';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit {\n\n  title = 'Patient List';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfPatient = new PagedResultOfPatient();\n\n  constructor(private client: PatientClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['ptients/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BasicLayoutComponent } from '../components/common/layouts/basicLayout.component';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailComponent } from './patient-detail/patient-detail.component';\nimport { PatientDetailAddressComponent } from './patient-detail-address/patient-detail-address.component';\nimport { PatientDetailAuditComponent } from './patient-detail-audit/patient-detail-audit.component';\n\nconst routes: Routes = [\n  {\n    path: 'patients', component: BasicLayoutComponent, canLoad: [ AuthorizationGuard ],\n    children: [\n      { path: '', component: PatientListComponent },\n      { path: 'create', component: PatientDetailComponent },\n      { path: 'edit/:id', component: PatientDetailComponent },\n      { path: 'edit/:id/audit', component: PatientDetailAuditComponent },\n      { path: 'edit/:id/address', component: PatientDetailAddressComponent },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PatientsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { PatientClient } from '../core/data';\nimport { PageService } from '../core/services';\n\nimport { PatientsRoutingModule } from './patients-routing.module';\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailComponent } from './patient-detail/patient-detail.component';\nimport { PatientDetailAddressComponent } from './patient-detail-address/patient-detail-address.component';\nimport { PatientDetailAuditComponent } from './patient-detail-audit/patient-detail-audit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    CoreModule,\n    PatientsRoutingModule\n  ],\n  declarations: [PatientListComponent, PatientDetailComponent, PatientDetailAddressComponent, PatientDetailAuditComponent],\n  providers: [PatientClient, PageService]\n})\nexport class PatientsModule { }\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <!--{{id}}-->\\n  <!--\\n  <ul *ngIf=\\\"list.length\\\">\\n    <li *ngFor=\\\"let item of list\\\">{{item}}</li>\\n  </ul>\\n-->\\n<form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n  <!-- fields start -->\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n          Required.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name']) && formDir.submitted\\\">\\n          Must be at least 4 characters long.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['name']) && formDir.submitted\\\">\\n          Must be less than 128 characters long.\\n        </span>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"nameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Name -Arabic</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input id=\\\"nameArabic\\\" type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n            Required.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic']) && formDir.submitted\\\">\\n            Must be at least 4 characters long.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['nameArabic']) && formDir.submitted\\\">\\n            Must be less than 128 characters long.\\n          </span>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"notes\\\" class=\\\"col-sm-3 form-control-label\\\">Notes</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"notes\\\" type=\\\"text\\\" formControlName=\\\"notes\\\" class=\\\"form-control\\\">\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['notes']) && formDir.submitted\\\">\\n          Required.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['notes']) && formDir.submitted\\\">\\n          Must be at least 4 characters long.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['notes']) && formDir.submitted\\\">\\n          Must be less than 128 characters long.\\n        </span>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"notesArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Notes -Arabic</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input id=\\\"notesArabic\\\" type=\\\"text\\\" formControlName=\\\"notesArabic\\\" class=\\\"form-control\\\">\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['notesArabic']) && formDir.submitted\\\">\\n            Required.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['notesArabic']) && formDir.submitted\\\">\\n            Must be at least 4 characters long.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['notesArabic']) && formDir.submitted\\\">\\n            Must be less than 128 characters long.\\n          </span>\\n        </div>\\n  </div>\\n\\n<!--\\n<div class=\\\"form-group row\\\">\\n  <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n  <div class=\\\"col-sm-9\\\">\\n    <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n      Numbers Only.\\n    </span>\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n    <label for=\\\"DateFrom\\\" class=\\\"col-sm-3 form-control-label\\\">From</label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"From Date\\\" bsDatepicker formControlName=\\\"dateFrom\\\" />\\n    </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n    <label for=\\\"DateTo\\\" class=\\\"col-sm-3 form-control-label\\\">To</label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"To Date\\\" bsDatepicker formControlName=\\\"dateTo\\\" />\\n    </div>\\n</div>\\n-->\\n\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n    <div class=\\\"checkbox\\\">\\n      <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n  <!-- fields end -->\\n  <!-- buttons start -->\\n  <!--\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"offset-sm-3 col-sm-9\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n      <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n  </div>\\n  -->\\n  <!-- buttons end -->\\n</form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <!--<button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary m-r-xs\\\">Save</button>-->\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary m-r-xs\\\" (click)=\\\"save()\\\">Save</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Certificate, CertificateClient } from '../../core/data';\nimport { NumberValidator } from '../../core/validators';\n\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-provider-certificate-detail',\n  templateUrl: './provider-certificate-detail.component.html',\n  styleUrls: ['./provider-certificate-detail.component.scss']\n})\nexport class ProviderCertificateDetailComponent implements OnInit {\n\n  id: '';\n  title: '';\n  isEdit: true;\n  itemForm: FormGroup;\n\n  constructor(public bsModalRef: BsModalRef, private client: CertificateClient, private fb: FormBuilder) {\n    this.isEdit = true;\n    this.createForm();\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      notes: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      notesArabic: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      dateFrom: '',\n      dateTo: '',\n      providerId: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.isEdit) {\n      this.client.get(this.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    console.log('save ' + this.itemForm.valid + ' ' + this.itemForm.value);\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.isEdit) {\n      this.client.save(this.id, this.itemForm.value)\n        .subscribe(() => {\n          // this.router.navigate(['providers/' + this.page.typeFlag]);\n          this.bsModalRef.hide();\n        }, (error) => {\n          this.bsModalRef.hide();\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          // this.router.navigate(['providers/' + this.page.typeFlag]);\n          this.bsModalRef.hide();\n        }, (error) => {\n          this.bsModalRef.hide();\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    // this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n</div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"tabs-container\\\">\\n                    <ul class=\\\"nav nav-tabs\\\">\\n                        <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id]\\\">Basic</a>\\n                        </li>\\n                        <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'address']\\\">Address</a>\\n                        </li>\\n                        <!--\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'specialties']\\\">Specialties</a>\\n                        </li>\\n                        -->\\n                        <li class=\\\"active\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'certificates']\\\">Certificates</a>\\n                        </li>\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'experiences']\\\">Experiences</a>\\n                        </li>\\n                        <!--\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'audit']\\\">Audit</a>\\n                        </li>\\n                        -->\\n                    </ul>\\n                </div>\\n                <div class=\\\"ibox-content\\\">\\n                    <div class=\\\"tab-content\\\">\\n                        <ngx-datatable class=\\\"bootstrap\\\"\\n                        [rows]=\\\"items.result\\\"\\n                        [loadingIndicator]=\\\"loadingIndicator\\\"\\n                        [headerHeight]=\\\"40\\\"\\n                        [footerHeight]=\\\"40\\\"\\n                        [columnMode]=\\\"'force'\\\"\\n                        [rowHeight]=\\\"40\\\"\\n                        [externalPaging]=\\\"true\\\"\\n                        [count]=\\\"count\\\"\\n                        [offset]=\\\"items.pageIndex\\\"\\n                        [limit]=\\\"items.pageSize\\\"\\n                        (page)='loadPage($event)'>\\n                            <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\" [width]=\\\"80\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\n                                    </button>\\n                                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"openModalWithComponent(value)\\\">\\n                                        <i class=\\\"fa fa-pencil\\\"></i>\\n                                    </button>\\n                                </ng-template>\\n                            </ngx-datatable-column>\\n                        </ngx-datatable>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfCertificate, Certificate, CertificateClient, PagedResultOfExperience } from '../../core/data';\nimport { PageService } from '../../core/services';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { ProviderCertificateDetailComponent } from '../provider-certificate-detail/provider-certificate-detail.component';\n\n\n\n@Component({\n  selector: 'app-provider-certificate-list',\n  templateUrl: './provider-certificate-list.component.html',\n  styleUrls: ['./provider-certificate-list.component.scss']\n})\nexport class ProviderCertificateListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'List';\n  count = 0;\n  id = '';\n  typeFlag = 0;\n  loadAll = true;\n  loadingIndicator = true;\n  items: PagedResultOfCertificate = new PagedResultOfCertificate();\n\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private client: CertificateClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private pageSrv: PageService,\n    private modalService: BsModalService) {\n    this.route.params.subscribe(params => {\n      this.id = params['id']; // (+) converts string 'id' to a number\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForProvider(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n\n  // Modal\n\n  openModalWithComponent(rowId) {\n    console.log(rowId);\n    const initialState = {\n      id: rowId,\n      title: 'Experience'\n    };\n    this.bsModalRef = this.modalService.show(ProviderCertificateDetailComponent, {initialState});\n    // this.bsModalRef.content.closeBtnName = 'Save';\n    // this.bsModalRef.content.closeBtnName = 'Cancel';\n  }\n\n\n  // Common\n\n  create() {\n    this.router.navigate(['providers/create']);\n  }\n\n  loadPage(para) {\n    this.client.provider(this.id, para.offset, para.pageSize,  this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete', this.items));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    // console.log(e);\n    // console.log(e.target.checked);\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n    <h2>{{title}}</h2>\\n  </div>\\n</div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"ibox float-e-margins\\\">\\n          <div class=\\\"tabs-container\\\">\\n              <ul class=\\\"nav nav-tabs\\\">\\n                  <li class=\\\"\\\">\\n                    <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id]\\\">Basic</a>\\n                  </li>\\n                  <li class=\\\"active\\\">\\n                    <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'address']\\\">Address</a>\\n                  </li>\\n                  <!--\\n                  <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'specialties']\\\">Specialties</a>\\n                  </li>\\n                  -->\\n                  <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'certificates']\\\">Certificates</a>\\n                  </li>\\n                  <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'experiences']\\\">Experiences</a>\\n                  </li>\\n                  <!--\\n                  <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'audit']\\\">Audit</a>\\n                  </li>\\n                  -->\\n              </ul>\\n          </div>\\n          <div class=\\\"ibox-content\\\">\\n              <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <!-- fields start -->\\n\\n                <div class=\\\"form-group row\\\">\\n                    <label for=\\\"select\\\" class=\\\"col-sm-3 form-control-label\\\">City</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                      <select id=\\\"select\\\" formControlName=\\\"cityId\\\">\\n                          <option *ngFor=\\\"let c of cityList\\\" [value]=\\\"c.id\\\">\\n                            {{ c.name }}\\n                          </option>\\n                        </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"street\\\" class=\\\"col-sm-3 form-control-label\\\">Street</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                      <input id=\\\"street\\\" type=\\\"text\\\" formControlName=\\\"street\\\" class=\\\"form-control\\\">\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['street']) && formDir.submitted\\\">\\n                        Required.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['street']) && formDir.submitted\\\">\\n                        Must be at least 3 characters long.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['street']) && formDir.submitted\\\">\\n                        Must be less than 512 characters long.\\n                      </span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"postCode\\\" class=\\\"col-sm-3 form-control-label\\\">Building No</label>\\n                      <div class=\\\"col-sm-9\\\">\\n                        <input id=\\\"postCode\\\" type=\\\"text\\\" formControlName=\\\"postCode\\\" class=\\\"form-control\\\">\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['postCode']) && formDir.submitted\\\">\\n                          Required.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['postCode']) && formDir.submitted\\\">\\n                          Must be at least 3 characters long.\\n                        </span>\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['postCode']) && formDir.submitted\\\">\\n                          Must be less than 512 characters long.\\n                        </span>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group row\\\">\\n                    <label for=\\\"latitude\\\" class=\\\"col-sm-3 form-control-label\\\">Latitude</label>\\n                      <div class=\\\"col-sm-9\\\">\\n                        <input id=\\\"latitude\\\" type=\\\"text\\\" formControlName=\\\"latitude\\\" class=\\\"form-control\\\">\\n                          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['latitude']) && formDir.submitted\\\">\\n                            Required.\\n                          </span>\\n                      </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group row\\\">\\n                      <label for=\\\"longitude\\\" class=\\\"col-sm-3 form-control-label\\\">Longitude</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                          <input id=\\\"longitude\\\" type=\\\"text\\\" formControlName=\\\"longitude\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['longitude']) && formDir.submitted\\\">\\n                              Required.\\n                            </span>\\n                        </div>\\n                  </div>\\n                <!-- fields end -->\\n                <!-- buttons start -->\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                    <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                  </div>\\n                </div>\\n                <!-- buttons end -->\\n              </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>  \\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator, DecimalValidator } from '../../core/validators';\n\nimport { Provider, ProviderClient, City, CityClient } from '../../core/data';\n\n@Component({\n  selector: 'app-provider-detail-address',\n  templateUrl: './provider-detail-address.component.html',\n  styleUrls: ['./provider-detail-address.component.scss']\n})\nexport class ProviderDetailAddressComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  cityList = new Array<City>();\n\n  constructor(\n    private client: ProviderClient,\n    private cityClient: CityClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n\n    this.cityClient.all(0, false).subscribe(\n      r => {\n        // console.log(r);\n        this.cityList = r;\n      },\n      error => console.log(error),\n      () => console.log('get cities complete')\n    );\n\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      cityId: '',\n      cityName: '',\n      cityNameArabic: '',\n      street: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(512)]],\n      postCode: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(16)]],\n      latitude: [0, [DecimalValidator]],\n      longitude: [0, [DecimalValidator]],\n      updatedAt: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.addressGet(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      console.log(this.itemForm.value);\n      this.client.addressPut(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        });\n\n    } else {\n      this.client.addressPost(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n            <div class=\\\"tabs-container\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id]\\\">Basic</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'address']\\\">Address</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'specialties']\\\">Specialties</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'certificates']\\\">Certificates</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'experiences']\\\">Experiences</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'audit']\\\">Audit</a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"ibox-content\\\">\\n                <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                    <!-- fields start -->\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"joinDate\\\" class=\\\"col-sm-3 form-control-label\\\">Join Date</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"joinDate\\\" type=\\\"text\\\" formControlName=\\\"joinDate\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['joinDate']) && formDir.submitted\\\">\\n                                Required.\\n                            </span>\\n                        </div>\\n                    </div>                    \\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"ip\\\" class=\\\"col-sm-3 form-control-label\\\">IP</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"ip\\\" type=\\\"text\\\" formControlName=\\\"ip\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['ip']) && formDir.submitted\\\">\\n                                Required.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['ip']) && formDir.submitted\\\">\\n                                Must be at least 15 characters long.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['ip']) && formDir.submitted\\\">\\n                                Must be less than 16 characters long.\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"createdBy\\\" class=\\\"col-sm-3 form-control-label\\\">Created By</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"createdBy\\\" type=\\\"text\\\" formControlName=\\\"createdBy\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['createdBy']) && formDir.submitted\\\">\\n                                Required.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['createdBy']) && formDir.submitted\\\">\\n                                Must be at least 3 characters long.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['createdBy']) && formDir.submitted\\\">\\n                                Must be less than 256 characters long.\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"ip\\\" class=\\\"col-sm-3 form-control-label\\\">Edited By</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input id=\\\"editedBy\\\" type=\\\"text\\\" formControlName=\\\"editedBy\\\" class=\\\"form-control\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['editedBy']) && formDir.submitted\\\">\\n                                Required.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['editedBy']) && formDir.submitted\\\">\\n                                Must be at least 3 characters long.\\n                            </span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['editedBy']) && formDir.submitted\\\">\\n                                Must be less than 256 characters long.\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n\\n\\n\\n                    <!-- fields end -->\\n                    <!-- buttons start -->\\n                    <div class=\\\"form-group row\\\">\\n                        <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                            <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                            <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                        </div>\\n                    </div>\\n                    <!-- buttons end -->\\n                </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Provider, ProviderClient } from '../../core/data';\n\n@Component({\n  selector: 'app-provider-detail-audit',\n  templateUrl: './provider-detail-audit.component.html',\n  styleUrls: ['./provider-detail-audit.component.scss']\n})\nexport class ProviderDetailAuditComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: ProviderClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      createdBy: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(256)]],\n      editedBy: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(256)]],\n      joinDate: '',\n      ip: ['', [Validators.required, Validators.minLength(15), Validators.maxLength(16)]]\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.auditGet(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.auditPut(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.auditPost(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"tabs-container\\\">\\n            <tabset>\\n                <tab heading=\\\"Basic title\\\" id=\\\"tab1\\\">Basic content</tab>\\n                <tab heading=\\\"Basic Title 1\\\"  active=\\\"true\\\">Basic content 1</tab>\\n                <tab heading=\\\"Basic Title 2\\\">Basic content 2</tab>\\n              </tabset>\\n            <!--\\n            <tabset class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item active\\\">\\n                <tab (select)=\\\"goToLink('/base')\\\" [active]=\\\"tabset\\\" class=\\\"nav-item active\\\">\\n                  <ng-template tabHeading>\\n                    Base\\n                  </ng-template>\\n                </tab>\\n                </li>\\n                <li class=\\\"\\\">\\n                <tab (select)=\\\"goToLink('/address')\\\">\\n                  <ng-template tabHeading>\\n                    Address\\n                  </ng-template>\\n                </tab>\\n               </li>\\n              </tabset>\\n            -->\\n        </div>\\n        <div class=\\\"ibox-content\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n            <!-- fields start -->\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"givenName\\\" class=\\\"col-sm-3 form-control-label\\\">First Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"givenName\\\" type=\\\"text\\\" formControlName=\\\"givenName\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['givenName']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['givenName']) && formDir.submitted\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['givenName']) && formDir.submitted\\\">\\n                    Must be less than 128 characters long.\\n                  </span>\\n                </div>\\n            </div>\\n  \\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"familyName\\\" class=\\\"col-sm-3 form-control-label\\\">Family Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"familyName\\\" type=\\\"text\\\" formControlName=\\\"familyName\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['familyName']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['familyName']) && formDir.submitted\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['familyName']) && formDir.submitted\\\">\\n                      Must be less than 128 characters long.\\n                    </span>\\n                  </div>\\n            </div>\\n  \\n            <!-- Gender -->\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"Gender\\\" class=\\\"col-sm-3 form-control-label\\\">Gender</label>\\n              <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <label class=\\\"custom-control custom-radio\\\">\\n                    <input id=\\\"gender-male\\\"\\n                         type=\\\"radio\\\"\\n                         class=\\\"custom-control-input\\\"\\n                         [value]=\\\"1\\\"\\n                         formControlName=\\\"gender\\\">\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\n                    <span class=\\\"custom-control-description\\\">Male</span>\\n                  </label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <label class=\\\"custom-control custom-radio\\\">\\n                    <input id=\\\"gender-female\\\"\\n                         type=\\\"radio\\\"\\n                         class=\\\"custom-control-input\\\"\\n                         [value]=\\\"2\\\"\\n                         formControlName=\\\"gender\\\">\\n                    <span class=\\\"custom-control-indicator\\\"></span>\\n                    <span class=\\\"custom-control-description\\\">Female</span>\\n                  </label>\\n                </div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                Numbers Only.\\n              </span>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"offset-sm-3 col-sm-9\\\">\\n              <div class=\\\"checkbox\\\">\\n                <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n              </div>\\n            </div>\\n          </div>\\n            <!-- fields end -->\\n            <!-- buttons start -->\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n              </div>\\n            </div>\\n            <!-- buttons end -->\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Provider, ProviderClient } from '../../core/data';\n\n@Component({\n  selector: 'app-provider-detail-basic',\n  templateUrl: './provider-detail-basic.component.html',\n  styleUrls: ['./provider-detail-basic.component.scss']\n})\nexport class ProviderDetailBasicComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: ProviderClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      userId: '',\n      providerType: this.page.typeFlag,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      givenName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      familyName: ['', [Validators.required, Validators.maxLength(128)]],\n      gender: '',\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n\n  goToLink(link: string): void {\n    // this.router.navigateByUrl(link);\n    // providers/1/edit/0b0e5233-40ad-41a5-bb8f-bbac7e2d8c76\n    console.log(link);\n    this.router.navigate(['providers/' + this.page.typeFlag + 'edit/0b0e5233-40ad-41a5-bb8f-bbac7e2d8c76']);\n  }\n\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"tabs-container\\\">\\n\\n          <ul class=\\\"nav nav-tabs\\\">\\n              <li class=\\\"active\\\">\\n                <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id]\\\">Basic</a>\\n              </li>\\n              <li class=\\\"\\\">\\n                <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'address']\\\">Address</a>\\n              </li>\\n              <!--\\n              <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'specialties']\\\">Specialties</a>\\n              </li>\\n              -->\\n              <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'certificates']\\\">Certificates</a>\\n              </li>\\n              <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'experiences']\\\">Experiences</a>\\n              </li>\\n              <!--\\n              <li class=\\\"\\\">\\n                  <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'audit']\\\">Audit</a>\\n              </li>\\n              -->\\n          </ul>\\n\\n        <!--\\n          <tabset>\\n              <tab class=\\\"nav nav-item\\\">\\n                  <ng-template tabHeading>\\n                          <a class=\\\"routing_link\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'basic']\\\">Basic</a>\\n                  </ng-template>\\n              </tab>\\n              <tab [active]=\\\"tabset\\\" >\\n                  <ng-template tabHeading>\\n                      <a class=\\\"routing_link\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'address']\\\">Address</a>\\n                  </ng-template>\\n              </tab>\\n              <tab>\\n                  <ng-template tabHeading>\\n                          <a class=\\\"nav nav-item\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'certificates']\\\">Certificates</a>\\n                  </ng-template>\\n              </tab>\\n              <tab>\\n                  <ng-template tabHeading>\\n                          <a class=\\\"routing_link\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'audit']\\\">Audit</a>\\n                  </ng-template>\\n              </tab>\\n          </tabset> \\n        -->\\n\\n        <!--\\n          <tabset>\\n              <tab heading=\\\"Basic\\\"   [routerLink]=\\\"['/providers', page.typeFlag]\\\"></tab>\\n              <tab heading=\\\"Address\\\" [routerLink]=\\\"['/providers', page.typeFlag, 'address', page.id]\\\"></tab>\\n              <tab heading=\\\"Audit\\\"   [routerLink]=\\\"['/providers', page.typeFlag, 'audit', page.id]\\\"></tab>\\n          </tabset>\\n        -->\\n          <!--\\n          <tabset class=\\\"nav nav-tabs\\\">\\n              <li class=\\\"nav-item active\\\">\\n              <tab (select)=\\\"goToLink('/base')\\\" [active]=\\\"tabset\\\" class=\\\"nav-item active\\\">\\n                <ng-template tabHeading>\\n                  Base\\n                </ng-template>\\n              </tab>\\n              </li>\\n              <li class=\\\"\\\">\\n              <tab (select)=\\\"goToLink('/address')\\\">\\n                <ng-template tabHeading>\\n                  Address\\n                </ng-template>\\n              </tab>\\n             </li>\\n            </tabset>\\n          -->\\n      </div>\\n      <div class=\\\"ibox-content\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <!-- fields start -->\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"givenName\\\" class=\\\"col-sm-3 form-control-label\\\">First Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"givenName\\\" type=\\\"text\\\" formControlName=\\\"givenName\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['givenName']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['givenName']) && formDir.submitted\\\">\\n                      Must be less than 128 characters long.\\n                    </span>\\n                  </div>\\n              </div>\\n    \\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"familyName\\\" class=\\\"col-sm-3 form-control-label\\\">Family Name</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                      <input id=\\\"familyName\\\" type=\\\"text\\\" formControlName=\\\"familyName\\\" class=\\\"form-control\\\">\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['familyName']) && formDir.submitted\\\">\\n                        Required.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be at least 4 characters long.\\n                      </span>\\n                      <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['familyName']) && formDir.submitted\\\">\\n                        Must be less than 128 characters long.\\n                      </span>\\n                    </div>\\n              </div>\\n    \\n              <!-- Gender -->\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Gender\\\" class=\\\"col-sm-3 form-control-label\\\">Gender</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-male\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"1\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Male</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"form-check form-check-inline\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input id=\\\"gender-female\\\"\\n                           type=\\\"radio\\\"\\n                           class=\\\"custom-control-input\\\"\\n                           [value]=\\\"2\\\"\\n                           formControlName=\\\"gender\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Female</span>\\n                    </label>\\n                  </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n              <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                  Numbers Only.\\n                </span>\\n              </div>\\n            </div>\\n            \\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <div class=\\\"checkbox\\\">\\n                  <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                </div>\\n              </div>\\n            </div>\\n              <!-- fields end -->\\n              <!-- buttons start -->\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n          </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Provider, ProviderClient } from '../../core/data';\n\n@Component({\n  selector: 'app-provider-detail',\n  templateUrl: './provider-detail.component.html',\n  styleUrls: ['./provider-detail.component.scss']\n})\nexport class ProviderDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: ProviderClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      userId: '',\n      providerType: this.page.typeFlag,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      givenName: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      familyName: ['', [Validators.required, Validators.maxLength(128)]],\n      gender: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['providers/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n\n  // goToLink(link: string): void {\n    // this.router.navigateByUrl(link);\n    // providers/1/edit/0b0e5233-40ad-41a5-bb8f-bbac7e2d8c76\n    // console.log(link);\n    // this.router.navigate(['providers/' + this.page.typeFlag + 'edit/0b0e5233-40ad-41a5-bb8f-bbac7e2d8c76']);\n  // }\n\n}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <!--{{id}}-->\\n  <!--\\n  <ul *ngIf=\\\"list.length\\\">\\n    <li *ngFor=\\\"let item of list\\\">{{item}}</li>\\n  </ul>\\n-->\\n<form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n  <!-- fields start -->\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n          Required.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name']) && formDir.submitted\\\">\\n          Must be at least 4 characters long.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['name']) && formDir.submitted\\\">\\n          Must be less than 128 characters long.\\n        </span>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"nameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Name -Arabic</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input id=\\\"nameArabic\\\" type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n            Required.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic']) && formDir.submitted\\\">\\n            Must be at least 4 characters long.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['nameArabic']) && formDir.submitted\\\">\\n            Must be less than 128 characters long.\\n          </span>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"notes\\\" class=\\\"col-sm-3 form-control-label\\\">Notes</label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input id=\\\"notes\\\" type=\\\"text\\\" formControlName=\\\"notes\\\" class=\\\"form-control\\\">\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['notes']) && formDir.submitted\\\">\\n          Required.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['notes']) && formDir.submitted\\\">\\n          Must be at least 4 characters long.\\n        </span>\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['notes']) && formDir.submitted\\\">\\n          Must be less than 128 characters long.\\n        </span>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"notesArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Notes -Arabic</label>\\n        <div class=\\\"col-sm-9\\\">\\n          <input id=\\\"notesArabic\\\" type=\\\"text\\\" formControlName=\\\"notesArabic\\\" class=\\\"form-control\\\">\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['notesArabic']) && formDir.submitted\\\">\\n            Required.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['notesArabic']) && formDir.submitted\\\">\\n            Must be at least 4 characters long.\\n          </span>\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('maxlength', ['notesArabic']) && formDir.submitted\\\">\\n            Must be less than 128 characters long.\\n          </span>\\n        </div>\\n  </div>\\n\\n<!--\\n<div class=\\\"form-group row\\\">\\n  <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n  <div class=\\\"col-sm-9\\\">\\n    <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n      Numbers Only.\\n    </span>\\n  </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n    <label for=\\\"DateFrom\\\" class=\\\"col-sm-3 form-control-label\\\">From</label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"From Date\\\" bsDatepicker formControlName=\\\"dateFrom\\\" />\\n    </div>\\n</div>\\n<div class=\\\"form-group row\\\">\\n    <label for=\\\"DateTo\\\" class=\\\"col-sm-3 form-control-label\\\">To</label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"To Date\\\" bsDatepicker formControlName=\\\"dateTo\\\" />\\n    </div>\\n</div>\\n-->\\n\\n<div class=\\\"form-group row\\\">\\n  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n    <div class=\\\"checkbox\\\">\\n      <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n  <!-- fields end -->\\n  <!-- buttons start -->\\n  <!--\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"offset-sm-3 col-sm-9\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n      <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n  </div>\\n  -->\\n  <!-- buttons end -->\\n</form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <!--<button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary m-r-xs\\\">Save</button>-->\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary m-r-xs\\\" (click)=\\\"save()\\\">Save</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Experience, ExperienceClient } from '../../core/data';\nimport { NumberValidator } from '../../core/validators';\n\n\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-provider-experience-detail',\n  templateUrl: './provider-experience-detail.component.html',\n  styleUrls: ['./provider-experience-detail.component.scss']\n})\nexport class ProviderExperienceDetailComponent implements OnInit {\n\n  id: '';\n  title: '';\n  isEdit: true;\n  itemForm: FormGroup;\n  // closeBtnName: string;\n  // saveBtnName: string;\n\n  constructor(public bsModalRef: BsModalRef, private client: ExperienceClient, private fb: FormBuilder) {\n    this.isEdit = true;\n    this.createForm();\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      notes: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      notesArabic: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      dateFrom: '',\n      dateTo: '',\n      providerId: ''\n    });\n  }\n\n  ngOnInit() {\n    if (this.isEdit) {\n      this.client.get(this.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    console.log('save ' + this.itemForm.valid + ' ' + this.itemForm.value);\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.isEdit) {\n      this.client.save(this.id, this.itemForm.value)\n        .subscribe(() => {\n          // this.router.navigate(['providers/' + this.page.typeFlag]);\n          this.bsModalRef.hide();\n        }, (error) => {\n          this.bsModalRef.hide();\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          // this.router.navigate(['providers/' + this.page.typeFlag]);\n          this.bsModalRef.hide();\n        }, (error) => {\n          this.bsModalRef.hide();\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    // this.router.navigate(['providers/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n</div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"tabs-container\\\">\\n                    <ul class=\\\"nav nav-tabs\\\">\\n                        <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id]\\\">Basic</a>\\n                        </li>\\n                        <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'address']\\\">Address</a>\\n                        </li>\\n                        <!--\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'specialties']\\\">Specialties</a>\\n                        </li>\\n                        -->\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'certificates']\\\">Certificates</a>\\n                        </li>\\n                        <li class=\\\"active\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'experiences']\\\">Experiences</a>\\n                        </li>\\n                        <!--\\n                        <li class=\\\"\\\">\\n                            <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', typeFlag,'edit', id, 'audit']\\\">Audit</a>\\n                        </li>\\n                        -->\\n                    </ul>\\n                </div>\\n                <div class=\\\"ibox-content\\\">\\n                    <div class=\\\"tab-content\\\">\\n                        <ngx-datatable class=\\\"bootstrap\\\"\\n                        [rows]=\\\"items.result\\\"\\n                        [loadingIndicator]=\\\"loadingIndicator\\\"\\n                        [headerHeight]=\\\"40\\\"\\n                        [footerHeight]=\\\"40\\\"\\n                        [columnMode]=\\\"'force'\\\"\\n                        [rowHeight]=\\\"40\\\"\\n                        [externalPaging]=\\\"true\\\"\\n                        [count]=\\\"count\\\"\\n                        [offset]=\\\"items.pageIndex\\\"\\n                        [limit]=\\\"items.pageSize\\\"\\n                        (page)='loadPage($event)'>\\n                            <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\" [width]=\\\"80\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                                        <i class=\\\"fa fa-trash\\\"></i>\\n                                    </button>\\n                                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"openModalWithComponent(value)\\\">\\n                                        <i class=\\\"fa fa-pencil\\\"></i>\\n                                    </button>\\n                                </ng-template>\\n                            </ngx-datatable-column>\\n                        </ngx-datatable>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfExperience, Experience, ExperienceClient } from '../../core/data';\nimport { PageService } from '../../core/services';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { ProviderExperienceDetailComponent } from '../provider-experience-detail/provider-experience-detail.component';\n\n@Component({\n  selector: 'app-provider-experience-list',\n  templateUrl: './provider-experience-list.component.html',\n  styleUrls: ['./provider-experience-list.component.scss']\n})\nexport class ProviderExperienceListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'List';\n  count = 0;\n  id = '';\n  typeFlag = 0;\n  loadAll = true;\n  loadingIndicator = true;\n  items: PagedResultOfExperience = new PagedResultOfExperience();\n\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private client: ExperienceClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private pageSrv: PageService,\n    private modalService: BsModalService) {\n      this.route.params.subscribe(params => {\n      this.id = params['id']; // (+) converts string 'id' to a number\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForProvider(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Modal\n\n  openModalWithComponent(rowId) {\n    console.log(rowId);\n    const initialState = {\n      id: rowId,\n      title: 'Experience'\n    };\n    this.bsModalRef = this.modalService.show(ProviderExperienceDetailComponent, {initialState});\n    // this.bsModalRef.content.closeBtnName = 'Save';\n    // this.bsModalRef.content.closeBtnName = 'Cancel';\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['providers/create']);\n  }\n\n  loadPage(para) {\n    this.client.provider(this.id, para.offset, para.pageSize, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    // console.log(e);\n    // console.log(e.target.checked);\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <!--\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        -->\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                    <ngx-datatable class=\\\"bootstrap\\\"\\n                    [rows]=\\\"items.result\\\"\\n                    [loadingIndicator]=\\\"loadingIndicator\\\"\\n                    [headerHeight]=\\\"40\\\"\\n                    [footerHeight]=\\\"40\\\"\\n                    [columnMode]=\\\"'force'\\\"\\n                    [rowHeight]=\\\"40\\\"\\n                    [externalPaging]=\\\"true\\\"\\n                    [count]=\\\"count\\\"\\n                    [offset]=\\\"items.pageIndex\\\"\\n                    [limit]=\\\"items.pageSize\\\"\\n                    (page)='loadPage($event)'>\\n                    <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\" [width]=\\\"80\\\"></ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                    <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                        <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                            <!--\\n                            <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                                <i class=\\\"fa fa-trash\\\"></i>\\n                            </button>\\n                            -->\\n                            <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                                <i class=\\\"fa fa-pencil\\\"></i>\\n                            </button>\\n                        </ng-template>\\n                    </ngx-datatable-column>\\n                    </ngx-datatable>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfProvider, Provider, ProviderClient } from '../../core/data';\nimport { PageService } from '../../core/services';\n\n@Component({\n  selector: 'app-provider-list',\n  templateUrl: './provider-list.component.html',\n  styleUrls: ['./provider-list.component.scss']\n})\nexport class ProviderListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'List';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfProvider = new PagedResultOfProvider();\n\n  constructor(private client: ProviderClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForProvider(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['providers/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    // console.log(e);\n    // console.log(e.target.checked);\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n}\n","module.exports = \"<p>\\n  provider-specialty-detail works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provider-specialty-detail',\n  templateUrl: './provider-specialty-detail.component.html',\n  styleUrls: ['./provider-specialty-detail.component.scss']\n})\nexport class ProviderSpecialtyDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n            <div class=\\\"tabs-container\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id]\\\">Basic</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                      <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'address']\\\">Address</a>\\n                    </li>\\n                    <li class=\\\"active\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'specialties']\\\">Specialties</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'certificates']\\\">Certificates</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'experiences']\\\">Experiences</a>\\n                    </li>\\n                    <li class=\\\"\\\">\\n                        <a data-toggle=\\\"tab\\\" [routerLink]=\\\"['/providers', page.typeFlag,'edit', page.id, 'audit']\\\">Audit</a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"ibox-content\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </div>  \\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Provider, ProviderClient } from '../../core/data';\n\n@Component({\n  selector: 'app-provider-specialty-list',\n  templateUrl: './provider-specialty-list.component.html',\n  styleUrls: ['./provider-specialty-list.component.scss']\n})\nexport class ProviderSpecialtyListComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: ProviderClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n    this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n    this.createForm();\n    // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {}\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport {BasicLayoutComponent} from '../components/common/layouts/basicLayout.component';\n\nimport { ProviderListComponent } from './provider-list/provider-list.component';\nimport { ProviderDetailComponent } from './provider-detail/provider-detail.component';\n\nimport { ProviderDetailBasicComponent } from './provider-detail-basic/provider-detail-basic.component';\nimport { ProviderDetailAddressComponent } from './provider-detail-address/provider-detail-address.component';\nimport { ProviderDetailAuditComponent } from './provider-detail-audit/provider-detail-audit.component';\n\nimport { ProviderCertificateListComponent } from './provider-certificate-list/provider-certificate-list.component';\nimport { ProviderCertificateDetailComponent } from './provider-certificate-detail/provider-certificate-detail.component';\n\nimport { ProviderExperienceListComponent } from './provider-experience-list/provider-experience-list.component';\nimport { ProviderExperienceDetailComponent } from './provider-experience-detail/provider-experience-detail.component';\n\nimport { ProviderSpecialtyListComponent } from './provider-specialty-list/provider-specialty-list.component';\nimport { ProviderSpecialtyDetailComponent } from './provider-specialty-detail/provider-specialty-detail.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'providers', component: BasicLayoutComponent, canActivate: [AuthorizationGuard],\n    children: [\n      { path: ':flag', component: ProviderListComponent },\n      { path: ':flag/create', component: ProviderDetailComponent },\n      { path: ':flag/edit/:id', component: ProviderDetailComponent },\n      { path: ':flag/edit/:id/audit', component: ProviderDetailAuditComponent },\n      { path: ':flag/edit/:id/address', component: ProviderDetailAddressComponent },\n      { path: ':flag/edit/:id/certificates', component: ProviderCertificateListComponent },\n      { path: ':flag/edit/:id/specialties', component: ProviderSpecialtyListComponent },\n      { path: ':flag/edit/:id/experiences', component: ProviderExperienceListComponent },\n      // { path: ':flag/edit/location/:id', component: ProviderDetailLocationComponent },\n      // { path: ':flag/edit/specialties/:id', component: ProviderDetailSpecialtiesComponent },\n      // { path: ':flag/edit/certificates/:id', component: ProviderDetailCertificateListComponent },\n      // { path: ':flag/edit/experiences/:id', component: ProviderDetailExperienceListComponent },\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProvidersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { ProviderClient, CertificateClient, ExperienceClient } from '../core/data';\nimport { PageService } from '../core/services';\n\nimport { ProvidersRoutingModule } from './providers-routing.module';\nimport { ProviderListComponent } from './provider-list/provider-list.component';\nimport { ProviderDetailComponent } from './provider-detail/provider-detail.component';\nimport { ProviderDetailAddressComponent } from './provider-detail-address/provider-detail-address.component';\nimport { ProviderDetailBasicComponent } from './provider-detail-basic/provider-detail-basic.component';\nimport { ProviderDetailAuditComponent } from './provider-detail-audit/provider-detail-audit.component';\nimport { ProviderCertificateListComponent } from './provider-certificate-list/provider-certificate-list.component';\nimport { ProviderCertificateDetailComponent } from './provider-certificate-detail/provider-certificate-detail.component';\nimport { ProviderExperienceListComponent } from './provider-experience-list/provider-experience-list.component';\nimport { ProviderExperienceDetailComponent } from './provider-experience-detail/provider-experience-detail.component';\nimport { ProviderSpecialtyListComponent } from './provider-specialty-list/provider-specialty-list.component';\nimport { ProviderSpecialtyDetailComponent } from './provider-specialty-detail/provider-specialty-detail.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    CoreModule,\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ProvidersRoutingModule\n  ],\n  declarations: [\n    ProviderListComponent,\n    ProviderDetailComponent,\n    ProviderDetailBasicComponent,\n    ProviderDetailAddressComponent,\n    ProviderDetailAuditComponent,\n    ProviderCertificateListComponent,\n    ProviderExperienceListComponent,\n    ProviderSpecialtyListComponent,\n    ProviderSpecialtyDetailComponent,\n    ProviderExperienceDetailComponent,\n    ProviderCertificateDetailComponent\n  ],\n  providers: [ProviderClient, CertificateClient, ExperienceClient, PageService],\n  entryComponents: [ProviderExperienceDetailComponent, ProviderCertificateDetailComponent]\n})\nexport class ProvidersModule { }\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n  \\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"ibox-content\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <div>\\n                    <h3>Patient</h3>\\n                  </div>\\n                  <dl class=\\\"dl-horizontal\\\">\\n                      <dt>Name:</dt> <dd> {{item.patientName}}</dd>\\n                      <dt>Specialty</dt> <dd> {{item.specialty}} </dd>\\n                      <dt>Price Range:</dt> <dd>  {{item.priceRange}}</dd>\\n                      <dt>Notes:</dt> <dd class=\\\"text-navy\\\">{{item.notes}}</dd>\\n                      <dt>Rating:</dt> <dd>  {{item.providerRating}}</dd>\\n                  </dl>\\n\\n                </div>\\n                <div class=\\\"col-lg-6\\\" *ngIf=\\\"item.status>1;else approveContent\\\">\\n                    <div>\\n                      <h3>Provider</h3>\\n                    </div>\\n                    <dl class=\\\"dl-horizontal\\\">\\n                        <dt>Name:</dt> <dd>{{item.providerName}}</dd>\\n                        <dt>Type</dt> <dd> {{item.providerType | providerTypeString}} </dd>\\n                        <dt>Cost:</dt> <dd>  {{item.cost}}</dd>\\n                        <dt>Notes:</dt> <dd class=\\\"text-navy\\\">{{item.providerNotes}}</dd>\\n                        <dt>Rating:</dt> <dd>  {{item.patientRating}}</dd>\\n                    </dl>\\n                </div>\\n                <ng-template #approveContent>\\n                    <div class=\\\"col-lg-6\\\">\\n                        <button (click)=\\\"approve()\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Approve</button>\\n                    </div>\\n                </ng-template>\\n            </div>\\n            <hr/>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <dl class=\\\"dl-horizontal\\\">\\n                      <!--\\n                        <dt>Request Date:</dt> <dd> {{item.requestDate | date:'medium'}}</dd>\\n                      -->\\n                        <dt>Visit Date:</dt> <dd>  {{item.visitDate | date:'medium'}}</dd>\\n                        <dt>Complete Date</dt> <dd> {{item.closeDate | date:'medium'}} </dd>\\n                    </dl>\\n                </div>\\n            </div>\\n\\n          <!--\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n          -->\\n            <!-- fields start -->\\n          <!--\\n            <div class=\\\"form-group row\\\">\\n              \\n            </div>\\n          -->\\n            <!-- fields end -->\\n            <!-- buttons start -->\\n          <!--  \\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n              </div>\\n            </div>\\n          -->\\n            <!-- buttons end -->\\n        <!--</form>\\n        -->\\n      </div>\\n    </div>\\n  </div>\\n</div>  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../core/services';\nimport { NumberValidator } from '../../core/validators';\n\nimport { Request, RequestEdit, RequestClient } from '../../core/data';\n\n@Component({\n  selector: 'app-request-detail',\n  templateUrl: './request-detail.component.html',\n  styleUrls: ['./request-detail.component.scss']\n})\nexport class RequestDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Request';\n  item = new RequestEdit();\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: RequestClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.item = resp;\n          // this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  approve() {\n    console.log('approve clicked');\n    this.client.approve(this.page.id)\n        .subscribe(() => {\n          this.router.navigate(['requests/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['requests/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['requests/' + this.page.typeFlag]);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['requests/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <!--\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n        -->\\n    </div>\\n</div>\\n  <div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n              <div class=\\\"ibox float-e-margins\\\">\\n                      <div class=\\\"ibox-content\\\">\\n          <ngx-datatable class=\\\"bootstrap\\\"\\n          [rows]=\\\"items.result\\\"\\n          [loadingIndicator]=\\\"loadingIndicator\\\"\\n          [headerHeight]=\\\"40\\\"\\n          [footerHeight]=\\\"40\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [externalPaging]=\\\"true\\\"\\n          [count]=\\\"count\\\"\\n          [offset]=\\\"items.pageIndex\\\"\\n          [limit]=\\\"items.pageSize\\\"\\n          (page)='loadPage($event)'>\\n            <ngx-datatable-column name=\\\"Visit Date\\\" prop=\\\"visitDate\\\" [width]=\\\"200\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | date:'medium'}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Patient\\\" prop=\\\"patientName\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Type\\\" prop=\\\"providerType\\\" [width]=\\\"100\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | providerTypeString}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Specialty\\\" prop=\\\"specialty\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Provider\\\" prop=\\\"providerName\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Cost\\\" prop=\\\"cost\\\" [width]=\\\"80\\\"></ngx-datatable-column>\\n            <!--\\n            <ngx-datatable-column name=\\\"Close Date\\\" prop=\\\"closeDate\\\">\\n                <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    {{value | date:'medium'}}\\n                </ng-template>\\n            </ngx-datatable-column>\\n            -->\\n            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\" [width]=\\\"80\\\">\\n                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <!--\\n                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </button>\\n                    -->\\n                    \\n                    <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                        <i class=\\\"fa fa-pencil\\\"></i>\\n                    </button>\\n                    \\n                </ng-template>\\n            </ngx-datatable-column>\\n        </ngx-datatable>\\n                      </div>\\n              </div>\\n        </div>\\n    </div>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfRequest, Request, RequestClient } from '../../core/data';\nimport { PageService } from '../../core/services';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.scss']\n})\nexport class RequestListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'Requests';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfRequest = new PagedResultOfRequest();\n\n  constructor(private client: RequestClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForRequestStatus(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['requests/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport {BasicLayoutComponent} from '../components/common/layouts/basicLayout.component';\n\nimport { RequestListComponent } from './request-list/request-list.component';\nimport { RequestDetailComponent } from './request-detail/request-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'requests', component: BasicLayoutComponent, canActivate: [AuthorizationGuard],\n    children: [\n      { path: ':flag', component: RequestListComponent },\n      { path: ':flag/create', component: RequestDetailComponent },\n      { path: ':flag/edit/:id', component: RequestDetailComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RequestsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { RequestClient } from '../core/data';\nimport { PageService } from '../core/services';\n\nimport { RequestsRoutingModule } from './requests-routing.module';\nimport { RequestListComponent } from './request-list/request-list.component';\nimport { RequestDetailComponent } from './request-detail/request-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    CoreModule,\n    RequestsRoutingModule\n  ],\n  declarations: [RequestListComponent, RequestDetailComponent],\n  providers: [RequestClient, PageService]\n})\nexport class RequestsModule { }\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                  <label for=\\\"select\\\" class=\\\"col-sm-3 form-control-label\\\">Country</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <select id=\\\"select\\\" formControlName=\\\"countryId\\\">\\n                        <option *ngFor=\\\"let c of countryList\\\" [value]=\\\"c.id\\\">\\n                          {{ c.name }}\\n                        </option>\\n                      </select>\\n                  </div>\\n                </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                    <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                  </div>\\n              </div>\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<p>Form value: {{ itemForm.value | json }}</p>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { City, CityClient, Country, CountryClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-city-detail',\n  templateUrl: './city-detail.component.html',\n  styleUrls: ['./city-detail.component.scss']\n})\nexport class CityDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  countryList = new Array<Country>();\n\n  constructor(\n    private client: CityClient,\n    private countryClient: CountryClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n\n      this.countryClient.all(0, false).subscribe(\n        r => {\n          console.log(r);\n          this.countryList = r;\n        },\n        error => console.log(error),\n        () => console.log('get countries complete')\n      );\n\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  get country() { return this.itemForm.get('country'); }\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      countryId: '',\n      countryName: '',\n      // country: new FormControl(this.countryList[0]),\n      // country: '',\n      latitude: 0,\n      longitude: 0,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n    // this.itemForm.controls['country'].patchValue(this.itemForm.controls['countryId'].value, {onlySelf: true});\n  }\n\n  ngOnInit() {\n\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  selectCountry() {\n    alert('');\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/cities']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/cities']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/cities']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    \\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-content\\\">\\n          <ngx-datatable class=\\\"bootstrap\\\"\\n          [rows]=\\\"items.result\\\"\\n          [loadingIndicator]=\\\"loadingIndicator\\\"\\n          [headerHeight]=\\\"40\\\"\\n          [footerHeight]=\\\"40\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [externalPaging]=\\\"true\\\"\\n          [count]=\\\"count\\\"\\n          [offset]=\\\"items.pageIndex\\\"\\n          [limit]=\\\"items.pageSize\\\"\\n          (page)='loadPage($event)'>\\n            <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Country\\\" prop=\\\"countryName\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                    <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                        <i class=\\\"fa fa-trash\\\"></i>\\n                    </button>\\n                    <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                        <i class=\\\"fa fa-pencil\\\"></i>\\n                    </button>\\n                </ng-template>\\n            </ngx-datatable-column>\\n        </ngx-datatable>\\n                    </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfCity, City, CityClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-city-list',\n  templateUrl: './city-list.component.html',\n  styleUrls: ['./city-list.component.scss']\n})\nexport class CityListComponent implements OnInit {\n\n  title = 'Cities';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfCity = new PagedResultOfCity();\n\n  constructor(private client: CityClient, private router: Router) { }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/cities/create']);\n  }\n\n  loadPage(para) {\n    // console.log(para.offset + ', ' + para.pageSize);\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"ibox float-e-margins\\\">\\n        <div class=\\\"ibox-content\\\">\\n\\n            <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                      Must be at least 4 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Code\\\" class=\\\"col-sm-3 form-control-label\\\">Code</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"code\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['code']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['code']) || itemForm.hasError('maxlength', ['code'])\\\">\\n                      Must be 3 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Code2\\\" class=\\\"col-sm-3 form-control-label\\\">Code 2</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"code2\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['code']) && formDir.submitted\\\">\\n                      Required.\\n                    </span>\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['code2']) || itemForm.hasError('maxlength', ['code2'])\\\">\\n                      Must be 2 characters long.\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                    <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                      Numbers Only.\\n                    </span>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                    <div class=\\\"checkbox\\\">\\n                      <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <!-- buttons start -->\\n            <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n              </form>\\n        </div> <!-- ibox content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n  \\n  <p>Form value: {{ itemForm.value | json }}</p>\\n  \\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { Country, CountryClient } from '../../../core/data';\n\n\n\n@Component({\n  selector: 'app-country-detail',\n  templateUrl: './country-detail.component.html',\n  styleUrls: ['./country-detail.component.scss']\n})\nexport class CountryDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: CountryClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  get name() { return this.itemForm.get('name'); }\n  get nameArabic() { return this.itemForm.get('nameArabic'); }\n  get code() { return this.itemForm.get('code'); }\n  get code2() { return this.itemForm.get('code2'); }\n  get rank() { return this.itemForm.get('rank'); }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      code: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      code2: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/countries']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/countries']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/countries']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Code\\\" prop=\\\"code\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfCountry, Country, CountryClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-country-list',\n  templateUrl: './country-list.component.html',\n  styleUrls: ['./country-list.component.scss']\n})\nexport class CountryListComponent implements OnInit {\n\n  title = 'Countries';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfCountry = new PagedResultOfCountry();\n\n  constructor(private client: CountryClient, private router: Router) {}\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/countries/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <!-- buttons start -->\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<p>Form value: {{ itemForm.value | json }}</p>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { PriceRange, PricerangeClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-pricerange-detail',\n  templateUrl: './pricerange-detail.component.html',\n  styleUrls: ['./pricerange-detail.component.scss']\n})\nexport class PricerangeDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: PricerangeClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/priceranges']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/priceranges']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/priceranges']);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { PagedResultOfPriceRange, PriceRange,   PricerangeClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-pricerange-list',\n  templateUrl: './pricerange-list.component.html',\n  styleUrls: ['./pricerange-list.component.scss']\n})\nexport class PricerangeListComponent implements OnInit {\n\n  title = 'Price Ranges';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfPriceRange = new PagedResultOfPriceRange();\n\n  constructor(private client: PricerangeClient, private router: Router) { }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/priceranges/create']);\n  }\n\n  loadPage(para) {\n    // console.log(para.offset + ', ' + para.pageSize);\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationGuard } from '../authorization.guard';\n\nimport {BasicLayoutComponent} from '../components/common/layouts/basicLayout.component';\n\nimport { PricerangeListComponent } from './pricerange/pricerange-list/pricerange-list.component';\nimport { PricerangeDetailComponent } from './pricerange/pricerange-detail/pricerange-detail.component';\nimport { SpecialtyListComponent } from './specialty/specialty-list/specialty-list.component';\nimport { SpecialtyDetailComponent } from './specialty/specialty-detail/specialty-detail.component';\nimport { CountryListComponent } from './country/country-list/country-list.component';\nimport { CountryDetailComponent } from './country/country-detail/country-detail.component';\nimport { CityListComponent } from './city/city-list/city-list.component';\nimport { CityDetailComponent } from './city/city-detail/city-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'settings', component: BasicLayoutComponent, canActivate: [AuthorizationGuard],\n    children: [\n\n      { path: 'priceranges', component: PricerangeListComponent},\n      { path: 'priceranges/create', component: PricerangeDetailComponent },\n      { path: 'priceranges/edit/:id', component: PricerangeDetailComponent },\n\n      { path: 'specialties',\n        children: [\n          { path: ':flag', component: SpecialtyListComponent },\n          { path: ':flag/create', component: SpecialtyDetailComponent },\n          { path: ':flag/edit/:id', component: SpecialtyDetailComponent }\n        ]\n\n      },\n\n      { path: 'countries', component: CountryListComponent},\n      { path: 'countries/create', component: CountryDetailComponent },\n      { path: 'countries/edit/:id', component: CountryDetailComponent },\n\n      { path: 'cities', component: CityListComponent },\n      { path: 'cities/create', component: CityDetailComponent },\n      { path: 'cities/edit/:id', component: CityDetailComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CountryClient, CityClient, PricerangeClient, SpecialtyClient } from '../core/data';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { CountryListComponent } from './country/country-list/country-list.component';\nimport { CountryDetailComponent } from './country/country-detail/country-detail.component';\nimport { CityListComponent } from './city/city-list/city-list.component';\nimport { CityDetailComponent } from './city/city-detail/city-detail.component';\nimport { PricerangeListComponent } from './pricerange/pricerange-list/pricerange-list.component';\nimport { PricerangeDetailComponent } from './pricerange/pricerange-detail/pricerange-detail.component';\nimport { SpecialtyListComponent } from './specialty/specialty-list/specialty-list.component';\nimport { SpecialtyDetailComponent } from './specialty/specialty-detail/specialty-detail.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    CountryListComponent,\n    CountryDetailComponent,\n    CityListComponent,\n    CityDetailComponent,\n    PricerangeListComponent,\n    PricerangeDetailComponent,\n    SpecialtyListComponent,\n    SpecialtyDetailComponent\n  ],\n  providers: [CountryClient, CityClient, PricerangeClient, SpecialtyClient]\n})\nexport class SettingsModule { }\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n  <div class=\\\"col-sm-8\\\">\\n      <h2>{{title}}</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"ibox float-e-margins\\\">\\n      <div class=\\\"ibox-content\\\">\\n\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"itemForm\\\" (ngSubmit)=\\\"save()\\\" #formDir=\\\"ngForm\\\" novalidate>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Name\\\" class=\\\"col-sm-3 form-control-label\\\">Name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['name']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['name'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"NameArabic\\\" class=\\\"col-sm-3 form-control-label\\\">Arabic</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"nameArabic\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('required', ['nameArabic']) && formDir.submitted\\\">\\n                    Required.\\n                  </span>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('minlength', ['nameArabic'])\\\">\\n                    Must be at least 4 characters long.\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label for=\\\"Rank\\\" class=\\\"col-sm-3 form-control-label\\\">Display Order</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"rank\\\" class=\\\"form-control\\\">\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"itemForm.hasError('onlynumber', ['rank']) && formDir.submitted\\\">\\n                    Numbers Only.\\n                  </span>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <div class=\\\"checkbox\\\">\\n                    <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" formControlName=\\\"isEnabled\\\"> Enabled </label>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <!-- buttons start -->\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"offset-sm-3 col-sm-9\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"itemForm.invalid\\\" class=\\\"btn btn-primary btn-tn m-r-xs\\\">Save</button>\\n                  <button class=\\\"btn btn-secondary btn-demo btn-tn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n              </div>\\n              <!-- buttons end -->\\n            </form>\\n      </div> <!-- ibox content -->\\n    </div>\\n  </div>\\n</div>\\n</div>\\n<!--\\n<p>Form value: {{ itemForm.value | json }}</p>\\n-->\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PageService, ActivatedPage } from '../../../core/services';\nimport { NumberValidator } from '../../../core/validators';\n\nimport { Specialty, SpecialtyClient } from '../../../core/data';\n\n@Component({\n  selector: 'app-specialty-detail',\n  templateUrl: './specialty-detail.component.html',\n  styleUrls: ['./specialty-detail.component.scss']\n})\nexport class SpecialtyDetailComponent implements OnInit {\n\n  id = '';\n  title = 'Create';\n  itemForm: FormGroup;\n  page: ActivatedPage = new ActivatedPage();\n\n  constructor(\n    private client: SpecialtyClient,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private pageSrv: PageService) {\n\n      this.page = this.pageSrv.getActivatedPage(this.activatedRoute);\n      this.createForm();\n      // this.title = this.pageSrv.getListTitleForProvider(this.page.typeFlag, this.page.title);\n  }\n\n  createForm() {\n    this.itemForm = this.fb.group({\n      id: '',\n      providerType: 0,\n      rank: [0, [NumberValidator]],\n      isEnabled: true,\n      name: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(128)]],\n      nameArabic: ['', [Validators.required, Validators.maxLength(128)]]\n    });\n  }\n\n  ngOnInit() {\n    if (this.page.isEdit) {\n      this.client.get(this.page.id).subscribe(\n        resp => {\n          console.log(resp);\n          this.itemForm.setValue(resp);\n          // console.log(\"form--> \" + this.itemForm.value);\n        },\n        error => console.log(error),\n        () => console.log('get item complete')\n      );\n    } else {\n\n    }\n  }\n\n  save() {\n    if (!this.itemForm.valid) {\n      return;\n    }\n    if (this.page.isEdit) {\n      this.client.save(this.page.id, this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/specialties']);\n        }, (error) => {\n          console.log(error);\n        });\n\n    } else {\n      this.client.create(this.itemForm.value)\n        .subscribe(() => {\n          this.router.navigate(['settings/specialties']);\n        }, (error) => {\n          console.log(error);\n        });\n    }\n    // console.log(this.itemForm.value);\n  }\n\n  cancel() {\n    this.router.navigate(['settings/specialties/' + this.page.typeFlag]);\n  }\n\n}\n","module.exports = \"<div class=\\\"row wrapper border-bottom white-bg page-heading\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <h2>{{title}}</h2>\\n    </div>\\n    <div class=\\\"col-sm-4 m-t-md\\\">\\n        <div class=\\\"pull-right\\\">\\n            <button (click)=\\\"create()\\\" class=\\\"btn btn-primary btn-tn\\\">Add</button>\\n        </div>\\n        <span class=\\\"pull-right m-xs m-r-md\\\">\\n            <label> <input type=\\\"checkbox\\\" class=\\\"i-checks\\\" (change)=\\\"toggleEnabled($event)\\\"> Show all </label>\\n        </span>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"ibox float-e-margins\\\">\\n                <div class=\\\"ibox-content\\\">\\n                        \\n            <ngx-datatable class=\\\"bootstrap\\\"\\n            [rows]=\\\"items.result\\\"\\n            [loadingIndicator]=\\\"loadingIndicator\\\"\\n            [headerHeight]=\\\"40\\\"\\n            [footerHeight]=\\\"40\\\"\\n            [columnMode]=\\\"'force'\\\"\\n            [rowHeight]=\\\"40\\\"\\n            [externalPaging]=\\\"true\\\"\\n            [count]=\\\"count\\\"\\n            [offset]=\\\"items.pageIndex\\\"\\n            [limit]=\\\"items.pageSize\\\"\\n            (page)='loadPage($event)'>\\n                <ngx-datatable-column name=\\\"Rank\\\" prop=\\\"rank\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Name\\\" prop=\\\"name\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Arabic\\\" prop=\\\"nameArabic\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Enabled\\\" prop=\\\"isEnabled\\\"></ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Actions\\\" sortable=\\\"false\\\" prop=\\\"id\\\">\\n                    <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\" ngx-datatable-cell-template>\\n                        <button md-icon-button class=\\\"btn-white\\\" (click)=\\\"deleteConfirm(value)\\\">\\n                            <i class=\\\"fa fa-trash\\\"></i>\\n                        </button>\\n                        <button md-icon-button class=\\\"btn-white\\\" [routerLink]=\\\"['edit', value]\\\">\\n                            <i class=\\\"fa fa-pencil\\\"></i>\\n                        </button>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n                </div>\\n          </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { PagedResultOfSpecialty, Specialty, SpecialtyClient } from '../../../core/data';\nimport { PageService } from '../../../core/services';\n\n@Component({\n  selector: 'app-specialty-list',\n  templateUrl: './specialty-list.component.html',\n  styleUrls: ['./specialty-list.component.scss']\n})\nexport class SpecialtyListComponent implements OnInit {\n\n  title = '';\n  subTitle = 'Specialties';\n  count = 0;\n  typeFlag = 0;\n  loadAll = false;\n  loadingIndicator = true;\n  items: PagedResultOfSpecialty = new PagedResultOfSpecialty();\n\n  constructor(private client: SpecialtyClient, private router: Router, private route: ActivatedRoute, private pageSrv: PageService) {\n    this.route.params.subscribe(params => {\n      this.typeFlag = params['flag']; // (+) converts string 'id' to a number\n      this.title = this.pageSrv.getListTitleForProvider(this.typeFlag, this.subTitle);\n      this.loadPage({ offset: 0, pageSize: 10 });\n    });\n  }\n\n  ngOnInit() {\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n  // Common\n\n  create() {\n    this.router.navigate(['settings/specialties/create']);\n  }\n\n  loadPage(para) {\n    this.client.page(para.offset, para.pageSize, this.typeFlag, this.loadAll).subscribe(\n      res => {\n        this.items = res;\n        this.count = res.count;\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n      },\n      error => console.log(error),\n      () => console.log('Get paged items complete'));\n  }\n\n  reloadPage() {\n    this.loadPage({ offset: this.items.pageIndex, pageSize: this.items.pageSize });\n  }\n\n  delete(id) {\n    this.client.delete(id)\n      .subscribe(() => {\n        this.reloadPage();\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  deleteConfirm(id): void {\n    console.log(id);\n    if (window.confirm('Are you sure you want to delete this item: ?')) {\n      this.delete(id);\n      // event.confirm.resolve();\n    } else {\n      // event.confirm.reject();\n    }\n  }\n\n  toggleEnabled(e) {\n    this.loadAll = false;\n    if (e.target.checked) {\n      this.loadAll = true;\n    }\n    this.loadPage({ offset: 0, pageSize: 10 });\n  }\n\n}\n","module.exports = \"<br>\\n\\n<div class=\\\"alert alert-danger\\\">\\n  <strong>{{message}}</strong>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.scss']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  public message: string;\n  public values: any[] = [];\n\n  constructor() {\n      this.message = '401: You have no rights to access this. Please Login';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouterModule} from '@angular/router';\n\nimport {StarterViewComponent} from './starterview.component';\nimport {LoginComponent} from './login.component';\n\nimport {PeityModule } from '../../components/charts/peity';\nimport {SparklineModule } from '../../components/charts/sparkline';\n\n@NgModule({\n  declarations: [\n    StarterViewComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    PeityModule,\n    SparklineModule\n  ],\n  exports: [\n    StarterViewComponent,\n    LoginComponent\n  ],\n})\n\nexport class AppviewsModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'login',\n  templateUrl: 'login.template.html'\n})\nexport class LoginComponent { }\n","module.exports = \"<div class=\\\"middle-box text-center loginscreen  animated fadeInDown\\\">\\n    <div>\\n        <div>\\n            <h1 class=\\\"logo-name\\\">IN+</h1>\\n        </div>\\n        <h3>Welcome to IN+</h3>\\n        <p>Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.\\n        </p>\\n        <p>Login in. To see it in action.</p>\\n        <form class=\\\"m-t\\\" role=\\\"form\\\" action=\\\"#\\\">\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required=\\\"\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary block full-width m-b\\\">Login</button>\\n\\n            <a href=\\\"#\\\"><small>Forgot password?</small></a>\\n            <p class=\\\"text-muted text-center\\\"><small>Do not have an account?</small></p>\\n            <a class=\\\"btn btn-sm btn-white btn-block\\\" href=\\\"#\\\">Create an account</a>\\n        </form>\\n        <p class=\\\"m-t\\\"> <small>Inspinia we app framework base on Bootstrap 3 &copy; 2014</small> </p>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3\\\">\\n                  <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                      <span class=\\\"label label-success pull-right\\\"></span>\\n                      <h5>Doctors</h5>\\n                    </div>\\n                    <div class=\\\"ibox-content\\\">\\n                      <h1 class=\\\"no-margins\\\">{{doctorCount}}</h1>\\n                      <!--\\n                      <div class=\\\"stat-percent font-bold text-success\\\">98% <i class=\\\"fa fa-bolt\\\"></i></div>\\n                      <small>Total income</small>\\n                      -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-3\\\">\\n                  <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                      <span class=\\\"label label-info pull-right\\\"></span>\\n                      <h5>Nurses</h5>\\n                    </div>\\n                    <div class=\\\"ibox-content\\\">\\n                      <h1 class=\\\"no-margins\\\">{{nurseCount}}</h1>\\n                      <!--\\n                      <div class=\\\"stat-percent font-bold text-info\\\">20% <i class=\\\"fa fa-level-up\\\"></i></div>\\n                      <small>New orders</small>\\n                      -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-3\\\">\\n                  <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                      <span class=\\\"label label-primary pull-right\\\"></span>\\n                      <h5>Laboratories</h5>\\n                    </div>\\n                    <div class=\\\"ibox-content\\\">\\n                      <h1 class=\\\"no-margins\\\">{{labCount}}</h1>\\n                      <!--\\n                      <div class=\\\"stat-percent font-bold text-navy\\\">44% <i class=\\\"fa fa-level-up\\\"></i></div>\\n                      <small>Laboratories</small>\\n                      -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-lg-3\\\">\\n                  <div class=\\\"ibox float-e-margins\\\">\\n                    <div class=\\\"ibox-title\\\">\\n                      <span class=\\\"label label-danger pull-right\\\"></span>\\n                      <h5>Radiographies</h5>\\n                    </div>\\n                    <div class=\\\"ibox-content\\\">\\n                      <h1 class=\\\"no-margins\\\">{{radioCount}}</h1>\\n                      <!--\\n                      <div class=\\\"stat-percent font-bold text-danger\\\">38% <i class=\\\"fa fa-level-down\\\"></i></div>\\n                      <small>In first month</small>\\n                      -->\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n</div>\\n\"","import { Component, OnDestroy, OnInit, } from '@angular/core';\nimport { ProviderClient } from '../../core/data';\n\n@Component({\n  selector: 'app-starter',\n  templateUrl: 'starter.template.html'\n})\nexport class StarterViewComponent implements OnDestroy, OnInit  {\n\npublic nav: any;\ndoctorCount = 0;\nnurseCount = 0;\nlabCount = 0;\nradioCount = 0;\n\npublic constructor(private client: ProviderClient) {\n  this.nav = document.querySelector('nav.navbar');\n}\n\npublic ngOnInit(): any {\n  this.nav.className += ' white-bg';\n\n  this.client.count(1).subscribe(\n    resp => {\n      console.log(resp);\n      this.doctorCount = resp;\n    },\n    error => console.log(error),\n    () => console.log('get item complete')\n  );\n\n  this.client.count(2).subscribe(\n    resp => {\n      console.log(resp);\n      this.nurseCount = resp;\n    },\n    error => console.log(error),\n    () => console.log('get item complete')\n  );\n\n  this.client.count(3).subscribe(\n    resp => {\n      console.log(resp);\n      this.labCount = resp;\n    },\n    error => console.log(error),\n    () => console.log('get item complete')\n  );\n\n  this.client.count(4).subscribe(\n    resp => {\n      console.log(resp);\n      this.radioCount = resp;\n    },\n    error => console.log(error),\n    () => console.log('get item complete')\n  );\n}\n\n\npublic ngOnDestroy(): any {\n  this.nav.classList.remove('white-bg');\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  /*\n  STS_BASE_URL: 'http://localhost:5000',\n  API_BASE_URL: 'http://localhost:5001',\n  APP_BASE_URL: 'http://localhost:4200',\n  */\n  STS_BASE_URL: 'http://medcallidsrv1234.azurewebsites.net',\n  API_BASE_URL: 'http://medcallapi1234.azurewebsites.net',\n  APP_BASE_URL: 'https://medcalldashboard.azurewebsites.net'\n \n\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}